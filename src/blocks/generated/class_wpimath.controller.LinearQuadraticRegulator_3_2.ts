// This file was generated. Do not edit!

import {Category} from "../../toolbox/items";

// Blocks for class wpimath.controller.LinearQuadraticRegulator_3_2

export function initialize() {
}

export function getToolboxCategory(subcategories: Category[] = []): Category {
  const category: Category = {
    kind: "category",
    name: "LinearQuadraticRegulator_3_2",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a controller with the given coefficients and plant.\n\nSee\nhttps://docs.wpilib.org/en/stable/docs/software/advanced-controls/state-space/state-space-intro.html#lqr-tuning\nfor how to select the tolerances.\n\n:param A:      Continuous system matrix of the plant being controlled.\n:param B:      Continuous input matrix of the plant being controlled.\n:param Qelems: The maximum desired error tolerance for each state.\n:param Relems: The maximum desired control effort for each input.\n:param dt:     Discretization timestep.\n               @throws std::invalid_argument If the system is unstabilizable.", "returnType": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2", "args": [{"name": "A", "type": "numpy.ndarray[numpy.float64[3, 3]]"}, {"name": "B", "type": "numpy.ndarray[numpy.float64[3, 2]]"}, {"name": "Qelems", "type": "Tuple[float, float, float]"}, {"name": "Relems", "type": "Tuple[float, float]"}, {"name": "dt", "type": "wpimath.units.seconds"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 3]]"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 2]]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a controller with the given coefficients and plant.\n\n:param A:  Continuous system matrix of the plant being controlled.\n:param B:  Continuous input matrix of the plant being controlled.\n:param Q:  The state cost matrix.\n:param R:  The input cost matrix.\n:param dt: Discretization timestep.\n           @throws std::invalid_argument If the system is unstabilizable.", "returnType": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2", "args": [{"name": "A", "type": "numpy.ndarray[numpy.float64[3, 3]]"}, {"name": "B", "type": "numpy.ndarray[numpy.float64[3, 2]]"}, {"name": "Q", "type": "numpy.ndarray[numpy.float64[3, 3]]"}, {"name": "R", "type": "numpy.ndarray[numpy.float64[2, 2]]"}, {"name": "dt", "type": "wpimath.units.seconds"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 3]]"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 2]]"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 3]]"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[2, 2]]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a controller with the given coefficients and plant.\n\n:param A:  Continuous system matrix of the plant being controlled.\n:param B:  Continuous input matrix of the plant being controlled.\n:param Q:  The state cost matrix.\n:param R:  The input cost matrix.\n:param N:  The state-input cross-term cost matrix.\n:param dt: Discretization timestep.\n           @throws std::invalid_argument If the system is unstabilizable.", "returnType": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2", "args": [{"name": "A", "type": "numpy.ndarray[numpy.float64[3, 3]]"}, {"name": "B", "type": "numpy.ndarray[numpy.float64[3, 2]]"}, {"name": "Q", "type": "numpy.ndarray[numpy.float64[3, 3]]"}, {"name": "R", "type": "numpy.ndarray[numpy.float64[2, 2]]"}, {"name": "N", "type": "numpy.ndarray[numpy.float64[3, 2]]"}, {"name": "dt", "type": "wpimath.units.seconds"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 3]]"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 2]]"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 3]]"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[2, 2]]"}}}}, "ARG4": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 2]]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "", "returnType": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2", "args": [{"name": "arg0", "type": "wpimath._controls._controls.system.LinearSystem_3_2_1"}, {"name": "arg1", "type": "Tuple[float, float, float]"}, {"name": "arg2", "type": "Tuple[float, float]"}, {"name": "arg3", "type": "wpimath.units.seconds"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystem_3_2_1"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "", "returnType": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2", "args": [{"name": "arg0", "type": "wpimath._controls._controls.system.LinearSystem_3_2_2"}, {"name": "arg1", "type": "Tuple[float, float, float]"}, {"name": "arg2", "type": "Tuple[float, float]"}, {"name": "arg3", "type": "wpimath.units.seconds"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystem_3_2_2"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "", "returnType": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2", "args": [{"name": "arg0", "type": "wpimath._controls._controls.system.LinearSystem_3_2_3"}, {"name": "arg1", "type": "Tuple[float, float, float]"}, {"name": "arg2", "type": "Tuple[float, float]"}, {"name": "arg3", "type": "wpimath.units.seconds"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystem_3_2_3"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myfloat64[2, 3]]"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the controller matrix K.", "returnType": "numpy.ndarray[numpy.float64[2, 3]]", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "K"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns an element of the controller matrix K.\n\n:param i: Row of K.\n:param j: Column of K.", "returnType": "float", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}, {"name": "i", "type": "int"}, {"name": "j", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "K"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myfloat64[3, 1]]"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the reference vector r.\n\n:returns: The reference vector.", "returnType": "numpy.ndarray[numpy.float64[3, 1]]", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "R"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns an element of the reference vector r.\n\n:param i: Row of r.\n\n:returns: The row of the reference vector.", "returnType": "float", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}, {"name": "i", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "R"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myfloat64[2, 1]]"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the control input vector u.\n\n:returns: The control input.", "returnType": "numpy.ndarray[numpy.float64[2, 1]]", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "U"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns an element of the control input vector u.\n\n:param i: Row of u.\n\n:returns: The row of the control input vector.", "returnType": "float", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}, {"name": "i", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "U"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myfloat64[2, 1]]"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the next output of the controller.\n\n:param x: The current state x.", "returnType": "numpy.ndarray[numpy.float64[2, 1]]", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}, {"name": "x", "type": "numpy.ndarray[numpy.float64[3, 1]]"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 1]]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myfloat64[2, 1]]"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the next output of the controller.\n\n:param x:     The current state x.\n:param nextR: The next reference vector r.", "returnType": "numpy.ndarray[numpy.float64[2, 1]]", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}, {"name": "x", "type": "numpy.ndarray[numpy.float64[3, 1]]"}, {"name": "nextR", "type": "numpy.ndarray[numpy.float64[3, 1]]"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 1]]"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 1]]"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Adjusts LQR controller gain to compensate for a pure time delay in the\ninput.\n\nLinear-Quadratic regulator controller gains tend to be aggressive. If\nsensor measurements are time-delayed too long, the LQR may be unstable.\nHowever, if we know the amount of delay, we can compute the control based\non where the system will be after the time delay.\n\nSee https://file.tavsys.net/control/controls-engineering-in-frc.pdf\nappendix C.4 for a derivation.\n\n:param plant:      The plant being controlled.\n:param dt:         Discretization timestep.\n:param inputDelay: Input time delay.", "returnType": "None", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}, {"name": "plant", "type": "wpimath._controls._controls.system.LinearSystem_3_2_1"}, {"name": "dt", "type": "wpimath.units.seconds"}, {"name": "inputDelay", "type": "wpimath.units.seconds"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "latencyCompensate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystem_3_2_1"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Adjusts LQR controller gain to compensate for a pure time delay in the\ninput.\n\nLinear-Quadratic regulator controller gains tend to be aggressive. If\nsensor measurements are time-delayed too long, the LQR may be unstable.\nHowever, if we know the amount of delay, we can compute the control based\non where the system will be after the time delay.\n\nSee https://file.tavsys.net/control/controls-engineering-in-frc.pdf\nappendix C.4 for a derivation.\n\n:param plant:      The plant being controlled.\n:param dt:         Discretization timestep.\n:param inputDelay: Input time delay.", "returnType": "None", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}, {"name": "plant", "type": "wpimath._controls._controls.system.LinearSystem_3_2_2"}, {"name": "dt", "type": "wpimath.units.seconds"}, {"name": "inputDelay", "type": "wpimath.units.seconds"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "latencyCompensate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystem_3_2_2"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Resets the controller.", "returnType": "None", "args": [{"name": "linearQuadraticRegulator_3_2", "type": "wpimath._controls._controls.controller.LinearQuadraticRegulator_3_2"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LinearQuadraticRegulator_3_2", "FUNC": "reset"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearQuadraticRegulator_3_2"}}}}}},
    ],
  };
  category.contents.push(...subcategories);
  return category;
}
