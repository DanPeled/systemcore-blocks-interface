// This file was generated. Do not edit!

import {Category} from "../../toolbox/items";

// Blocks for class wpilib.simulation.ElevatorSim

export function initialize() {
}

export function getToolboxCategory(subcategories: any): Category {
  const category = {
    kind: "category",
    name: "ElevatorSim",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myElevatorSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a simulated elevator mechanism.\n\n:param plant:              The linear system that represents the elevator.\n                           This system can be created with\n                           LinearSystemId::ElevatorSystem().\n:param gearbox:            The type of and number of motors in your\n                           elevator gearbox.\n:param minHeight:          The minimum allowed height of the elevator.\n:param maxHeight:          The maximum allowed height of the elevator.\n:param simulateGravity:    Whether gravity should be simulated or not.\n:param startingHeight:     The starting height of the elevator.\n:param measurementStdDevs: The standard deviation of the measurements.", "returnType": "wpilib.simulation._simulation.ElevatorSim", "args": [{"name": "plant", "type": "wpimath._controls._controls.system.LinearSystem_2_1_1"}, {"name": "gearbox", "type": "wpimath._controls._controls.plant.DCMotor"}, {"name": "minHeight", "type": "wpimath.units.meters"}, {"name": "maxHeight", "type": "wpimath.units.meters"}, {"name": "simulateGravity", "type": "bool"}, {"name": "startingHeight", "type": "wpimath.units.meters"}, {"name": "measurementStdDevs", "type": "Annotated[list[float], FixedSize(1)]"}], "importModule": "wpilib.simulation"}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystem_2_1_1"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDCMotor"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myElevatorSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a simulated elevator mechanism.\n\n:param gearbox:            The type of and number of motors in your\n                           elevator gearbox.\n:param gearing:            The gearing of the elevator (numbers greater\n                           than 1 represent reductions).\n:param carriageMass:       The mass of the elevator carriage.\n:param drumRadius:         The radius of the drum that your cable is\n                           wrapped around.\n:param minHeight:          The minimum allowed height of the elevator.\n:param maxHeight:          The maximum allowed height of the elevator.\n:param simulateGravity:    Whether gravity should be simulated or not.\n:param startingHeight:     The starting height of the elevator.\n:param measurementStdDevs: The standard deviation of the measurements.", "returnType": "wpilib.simulation._simulation.ElevatorSim", "args": [{"name": "gearbox", "type": "wpimath._controls._controls.plant.DCMotor"}, {"name": "gearing", "type": "float"}, {"name": "carriageMass", "type": "wpimath.units.kilograms"}, {"name": "drumRadius", "type": "wpimath.units.meters"}, {"name": "minHeight", "type": "wpimath.units.meters"}, {"name": "maxHeight", "type": "wpimath.units.meters"}, {"name": "simulateGravity", "type": "bool"}, {"name": "startingHeight", "type": "wpimath.units.meters"}, {"name": "measurementStdDevs", "type": "Annotated[list[float], FixedSize(1)]"}], "importModule": "wpilib.simulation"}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDCMotor"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the elevator current draw.\n\n:returns: The elevator current draw.", "returnType": "wpimath.units.amperes", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "getCurrentDraw"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myfloat64[1, 1]]"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the current output of the plant.\n\n:returns: The current output of the plant.", "returnType": "numpy.ndarray[numpy.float64[1, 1]]", "args": [{"name": "linearSystemSim_2_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_2_1_1"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_2_1_1", "FUNC": "getOutput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_2_1_1"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns an element of the current output of the plant.\n\n:param row: The row to return.\n\n:returns: An element of the current output of the plant.", "returnType": "float", "args": [{"name": "linearSystemSim_2_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_2_1_1"}, {"name": "row", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_2_1_1", "FUNC": "getOutput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_2_1_1"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the position of the elevator.\n\n:returns: The position of the elevator.", "returnType": "wpimath.units.meters", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "getPosition"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "wpimath.units.feet", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "getPositionFeet"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "wpimath.units.inches", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "getPositionInches"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the velocity of the elevator.\n\n:returns: The velocity of the elevator.", "returnType": "wpimath.units.meters_per_second", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "getVelocity"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "wpimath.units.feet_per_second", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "getVelocityFps"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the elevator has hit the lower limit.\n\n:returns: Whether the elevator has hit the lower limit.", "returnType": "bool", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "hasHitLowerLimit"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the elevator has hit the upper limit.\n\n:returns: Whether the elevator has hit the upper limit.", "returnType": "bool", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "hasHitUpperLimit"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the system inputs (usually voltages).\n\n:param u: The system inputs.", "returnType": "None", "args": [{"name": "linearSystemSim_2_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_2_1_1"}, {"name": "u", "type": "numpy.ndarray[numpy.float64[1, 1]]"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_2_1_1", "FUNC": "setInput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_2_1_1"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[1, 1]]"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "None", "args": [{"name": "linearSystemSim_2_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_2_1_1"}, {"name": "row", "type": "int"}, {"name": "value", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_2_1_1", "FUNC": "setInput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_2_1_1"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the input voltage for the elevator.\n\n:param voltage: The input voltage.", "returnType": "None", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}, {"name": "voltage", "type": "wpimath.units.volts"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "setInputVoltage"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the elevator's state. The new position will be limited between the\nminimum and maximum allowed heights.\n\n:param position: The new position\n:param velocity: The new velocity", "returnType": "None", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}, {"name": "position", "type": "wpimath.units.meters"}, {"name": "velocity", "type": "wpimath.units.meters_per_second"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "setState"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Updates the simulation.\n\n:param dt: The time between updates.", "returnType": "None", "args": [{"name": "linearSystemSim_2_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_2_1_1"}, {"name": "dt", "type": "wpimath.units.seconds"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_2_1_1", "FUNC": "update"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_2_1_1"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the elevator would hit the lower limit.\n\n:param elevatorHeight: The elevator height.\n\n:returns: Whether the elevator would hit the lower limit.", "returnType": "bool", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}, {"name": "elevatorHeight", "type": "wpimath.units.meters"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "wouldHitLowerLimit"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the elevator would hit the upper limit.\n\n:param elevatorHeight: The elevator height.\n\n:returns: Whether the elevator would hit the upper limit.", "returnType": "bool", "args": [{"name": "elevatorSim", "type": "wpilib.simulation._simulation.ElevatorSim"}, {"name": "elevatorHeight", "type": "wpimath.units.meters"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.ElevatorSim", "FUNC": "wouldHitUpperLimit"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myElevatorSim"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
