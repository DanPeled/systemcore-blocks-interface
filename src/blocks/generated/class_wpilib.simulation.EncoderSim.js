// This file was generated. Do not edit!

import * as python from "../python.js"

// Blocks for class wpilib.simulation.EncoderSim

export function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "EncoderSim",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myEncoderSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs from an Encoder object.\n\n:param encoder: Encoder to simulate", "returnType": "wpilib.simulation._simulation.EncoderSim", "args": [{"name": "encoder", "type": "wpilib._wpilib.Encoder"}], "importModule": "wpilib.simulation"}, "fields": {"CLASS": "wpilib.simulation.EncoderSim"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoder"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myEncoderSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "Creates an EncoderSim for a digital input channel.  Encoders take two\nchannels, so either one may be specified.\n\n:param channel: digital input channel\n\n:returns: Simulated object\n          @throws NoSuchElementException if no Encoder is configured for that channel", "returnType": "wpilib.simulation._simulation.EncoderSim", "args": [{"name": "channel", "type": "int"}], "importModule": "wpilib.simulation"}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "createForChannel"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myEncoderSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "Creates an EncoderSim for a simulated index.\nThe index is incremented for each simulated Encoder.\n\n:param index: simulator index\n\n:returns: Simulated object", "returnType": "wpilib.simulation._simulation.EncoderSim", "args": [{"name": "index", "type": "int"}], "importModule": "wpilib.simulation"}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "createForIndex"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the count of the encoder.\n\n:returns: the count", "returnType": "int", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getCount"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the direction of the encoder.\n\n:returns: the direction of the encoder", "returnType": "bool", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getDirection"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the distance of the encoder.\n\n:returns: the encoder distance", "returnType": "float", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getDistance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the distance per pulse of the encoder.\n\n:returns: the encoder distance per pulse", "returnType": "float", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getDistancePerPulse"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the Initialized value of the encoder.\n\n:returns: true if initialized", "returnType": "bool", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the max period of the encoder.\n\n:returns: the max period of the encoder", "returnType": "float", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getMaxPeriod"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the period of the encoder.\n\n:returns: the encoder period", "returnType": "float", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getPeriod"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the rate of the encoder.\n\n:returns: the rate of change", "returnType": "float", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getRate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Check if the encoder has been reset.\n\n:returns: true if reset", "returnType": "bool", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getReset"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the reverse direction of the encoder.\n\n:returns: the reverse direction of the encoder", "returnType": "bool", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getReverseDirection"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the samples-to-average value.\n\n:returns: the samples-to-average value", "returnType": "int", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "getSamplesToAverage"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the count property of the encoder.\n\n:param callback:      the callback that will be called whenever the count\n                      property is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "registerCountCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the direction of the encoder.\n\n:param callback:      the callback that will be called whenever the direction\n                      is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "registerDirectionCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the distance per pulse value of this encoder.\n\n:param callback:      the callback that will be called whenever the\n                      distance per pulse is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "registerDistancePerPulseCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the Initialized property of the encoder.\n\n:param callback:      the callback that will be called whenever the Initialized\n                      property is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "registerInitializedCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback to be run whenever the max period of the encoder is\nchanged.\n\n:param callback:      the callback\n:param initialNotify: whether to run the callback on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "registerMaxPeriodCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the period of the encoder.\n\n:param callback:      the callback that will be called whenever the period is\n                      changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "registerPeriodCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback to be called whenever the encoder is reset.\n\n:param callback:      the callback\n:param initialNotify: whether to run the callback on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "registerResetCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the reverse direction.\n\n:param callback:      the callback that will be called whenever the reverse\n                      direction is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "registerReverseDirectionCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the samples-to-average value of this encoder.\n\n:param callback:      the callback that will be called whenever the\n                      samples-to-average is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "registerSamplesToAverageCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Resets all simulation data for this encoder.", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "resetData"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the count of the encoder.\n\n:param count: the new count", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "count", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setCount"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Set the direction of the encoder.\n\n:param direction: the new direction", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "direction", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setDirection"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the encoder distance.\n\n:param distance: the new distance", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "distance", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setDistance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the encoder distance per pulse.\n\n:param distancePerPulse: the new distance per pulse", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "distancePerPulse", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setDistancePerPulse"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the Initialized value of the encoder.\n\n:param initialized: the new value", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "initialized", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the max period of the encoder.\n\n:param maxPeriod: the new value", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "maxPeriod", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setMaxPeriod"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the encoder period.\n\n:param period: the new period", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "period", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setPeriod"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the rate of the encoder.\n\n:param rate: the new rate", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "rate", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setRate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the reset property of the encoder.\n\n:param reset: the new value", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "reset", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setReset"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Set the reverse direction.\n\n:param reverseDirection: the new value", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "reverseDirection", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setReverseDirection"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Set the samples-to-average value.\n\n:param samplesToAverage: the new value", "returnType": "None", "args": [{"name": "encoderSim", "type": "wpilib.simulation._simulation.EncoderSim"}, {"name": "samplesToAverage", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.EncoderSim", "FUNC": "setSamplesToAverage"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEncoderSim"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
