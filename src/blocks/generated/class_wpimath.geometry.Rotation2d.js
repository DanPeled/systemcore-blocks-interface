// This file was generated. Do not edit!

import * as python from "../python.js"

// Blocks for class wpimath.geometry.Rotation2d

function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "Rotation2d",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a Rotation2d with a default angle of 0 degrees.", "returnType": "wpimath.geometry._geometry.Rotation2d", "args": [], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Rotation2d"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a Rotation2d with the given radian value.\n:param value: The value of the angle in radians.", "returnType": "wpimath.geometry._geometry.Rotation2d", "args": [{"name": "value", "type": "wpimath.units.radians"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Rotation2d"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a Rotation2d with the given x and y (cosine and sine)\ncomponents. The x and y don't have to be normalized.\n\n:param x: The x component or cosine of the rotation.\n:param y: The y component or sine of the rotation.", "returnType": "wpimath.geometry._geometry.Rotation2d", "args": [{"name": "x", "type": "float"}, {"name": "y", "type": "float"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Rotation2d"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the cosine of the rotation.\n\n:returns: The cosine of the rotation.", "returnType": "float", "args": [{"name": "rotation2d", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rotation2d", "FUNC": "cos"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the degree value of the rotation.\n\n:returns: The degree value of the rotation.\n          @see InputModulus to constrain the angle within (-180, 180]", "returnType": "wpimath.units.degrees", "args": [{"name": "rotation2d", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rotation2d", "FUNC": "degrees"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "", "returnType": "wpimath.geometry._geometry.Rotation2d", "args": [{"name": "value", "type": "wpimath.units.degrees"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Rotation2d", "FUNC": "fromDegrees"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "", "returnType": "wpimath.geometry._geometry.Rotation2d", "args": [{"name": "arg0", "type": "wpimath.units.turns"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Rotation2d", "FUNC": "fromRotations"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the radian value of the rotation.\n\n:returns: The radian value of the rotation.\n          @see AngleModulus to constrain the angle within (-pi, pi]", "returnType": "wpimath.units.radians", "args": [{"name": "rotation2d", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rotation2d", "FUNC": "radians"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Adds the new rotation to the current rotation using a rotation matrix.\n\n::\n\n  [cos_new]   [other.cos, -other.sin][cos]\n  [sin_new] = [other.sin,  other.cos][sin]\n  value_new = std::atan2(sin_new, cos_new)\n\n:param other: The rotation to rotate by.\n\n:returns: The new rotated Rotation2d.", "returnType": "wpimath.geometry._geometry.Rotation2d", "args": [{"name": "rotation2d", "type": "wpimath.geometry._geometry.Rotation2d"}, {"name": "other", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rotation2d", "FUNC": "rotateBy"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the sine of the rotation.\n\n:returns: The sine of the rotation.", "returnType": "float", "args": [{"name": "rotation2d", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rotation2d", "FUNC": "sin"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the tangent of the rotation.\n\n:returns: The tangent of the rotation.", "returnType": "float", "args": [{"name": "rotation2d", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rotation2d", "FUNC": "tan"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}

export {getToolboxCategory}
