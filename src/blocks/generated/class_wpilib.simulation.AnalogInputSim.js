// This file was generated. Do not edit!

// Blocks for class wpilib.simulation.AnalogInputSim

export function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "AnalogInputSim",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myAnalogInputSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs from an AnalogInput object.\n\n:param analogInput: AnalogInput to simulate", "returnType": "wpilib.simulation._simulation.AnalogInputSim", "args": [{"name": "analogInput", "type": "wpilib._wpilib.AnalogInput"}], "importModule": "wpilib.simulation"}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInput"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myAnalogInputSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs from an analog input channel number.\n\n:param channel: Channel number", "returnType": "wpilib.simulation._simulation.AnalogInputSim", "args": [{"name": "channel", "type": "int"}], "importModule": "wpilib.simulation"}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the accumulator center.\n\n:returns: the accumulator center", "returnType": "int", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "getAccumulatorCenter"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the accumulator count.\n\n:returns: the accumulator count.", "returnType": "int", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "getAccumulatorCount"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the accumulator deadband.\n\n:returns: the accumulator deadband", "returnType": "int", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "getAccumulatorDeadband"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Check if the accumulator has been initialized.\n\n:returns: true if initialized", "returnType": "bool", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "getAccumulatorInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the accumulator value.\n\n:returns: the accumulator value", "returnType": "int", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "getAccumulatorValue"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the number of average bits.\n\n:returns: the number of average bits", "returnType": "int", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "getAverageBits"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Check if this analog input has been initialized.\n\n:returns: true if initialized", "returnType": "bool", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "getInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the amount of oversampling bits.\n\n:returns: the amount of oversampling bits", "returnType": "int", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "getOversampleBits"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the voltage.\n\n:returns: the voltage", "returnType": "float", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "getVoltage"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the accumulator center.\n\n:param callback:      the callback that will be called whenever the accumulator\n                      center is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "registerAccumulatorCenterCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the accumulator count.\n\n:param callback:      the callback that will be called whenever the accumulator\n                      count is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "registerAccumulatorCountCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the accumulator deadband.\n\n:param callback:      the callback that will be called whenever the accumulator\n                      deadband is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "registerAccumulatorDeadbandCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on whether the accumulator is initialized.\n\n:param callback:      the callback that will be called whenever the accumulator\n                      is initialized\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "registerAccumulatorInitializedCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the accumulator value.\n\n:param callback:      the callback that will be called whenever the accumulator\n                      value is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "registerAccumulatorValueCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the number of average bits.\n\n:param callback:      the callback that will be called whenever the number of\n                      average bits is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "registerAverageBitsCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on whether the analog input is initialized.\n\n:param callback:      the callback that will be called whenever the analog input\n                      is initialized\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "registerInitializedCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the amount of oversampling bits.\n\n:param callback:      the callback that will be called whenever the oversampling\n                      bits are changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "registerOversampleBitsCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Register a callback on the voltage.\n\n:param callback:      the callback that will be called whenever the voltage is\n                      changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "returnType": "wpilib.simulation._simulation.CallbackStore", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "registerVoltageCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue], None]"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Reset all simulation data for this object.", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "resetData"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the accumulator center.\n\n:param accumulatorCenter: the new center", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "accumulatorCenter", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "setAccumulatorCenter"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the accumulator count.\n\n:param accumulatorCount: the new count.", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "accumulatorCount", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "setAccumulatorCount"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the accumulator deadband.\n\n:param accumulatorDeadband: the new deadband", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "accumulatorDeadband", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "setAccumulatorDeadband"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change whether the accumulator has been initialized.\n\n:param accumulatorInitialized: the new value", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "accumulatorInitialized", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "setAccumulatorInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the accumulator value.\n\n:param accumulatorValue: the new value", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "accumulatorValue", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "setAccumulatorValue"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the number of average bits.\n\n:param averageBits: the new value", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "averageBits", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "setAverageBits"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change whether this analog input has been initialized.\n\n:param initialized: the new value", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "initialized", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "setInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the amount of oversampling bits.\n\n:param oversampleBits: the new value", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "oversampleBits", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "setOversampleBits"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Change the voltage.\n\n:param voltage: the new value", "returnType": "None", "args": [{"name": "analogInputSim", "type": "wpilib.simulation._simulation.AnalogInputSim"}, {"name": "voltage", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.AnalogInputSim", "FUNC": "setVoltage"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInputSim"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
