// This file was generated. Do not edit!

import * as getPythonVariable from "../mrc_get_python_variable";
import {Category} from "../../toolbox/items";

// Blocks for class wpimath.geometry.Rectangle2d

export function initialize() {
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Rectangle2d", "wpimath.units.meters", ["xwidth", "ywidth"], ["", ""]);
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Rectangle2d", "wpimath.units.feet", ["xwidth_feet", "ywidth_feet"], ["", ""]);
}

export function getToolboxCategory(subcategories: Category[] = []): Category {
  const category: Category = {
    kind: "category",
    name: "Rectangle2d",
    contents: [
      {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rectangle2d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "rectangle2d", "selfType": "wpimath.geometry.Rectangle2d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rectangle2d", "VAR": "xwidth"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}}},
      {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rectangle2d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "rectangle2d", "selfType": "wpimath.geometry.Rectangle2d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rectangle2d", "VAR": "ywidth"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}}},
      {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rectangle2d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "rectangle2d", "selfType": "wpimath.geometry.Rectangle2d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rectangle2d", "VAR": "xwidth_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}}},
      {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rectangle2d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "rectangle2d", "selfType": "wpimath.geometry.Rectangle2d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rectangle2d", "VAR": "ywidth_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRectangle2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a rectangle at the specified position with the specified width\nand height.\n\n:param center: The position (translation and rotation) of the rectangle.\n:param xWidth: The x size component of the rectangle, in unrotated\n               coordinate frame.\n:param yWidth: The y size component of the rectangle, in unrotated\n               coordinate frame.", "returnType": "wpimath.geometry._geometry.Rectangle2d", "args": [{"name": "center", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "xWidth", "type": "wpimath.units.meters"}, {"name": "yWidth", "type": "wpimath.units.meters"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRectangle2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Creates an unrotated rectangle from the given corners. The corners should\nbe diagonally opposite of each other.\n\n:param cornerA: The first corner of the rectangle.\n:param cornerB: The second corner of the rectangle.", "returnType": "wpimath.geometry._geometry.Rectangle2d", "args": [{"name": "cornerA", "type": "wpimath.geometry._geometry.Translation2d"}, {"name": "cornerB", "type": "wpimath.geometry._geometry.Translation2d"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the center of the rectangle.\n\n:returns: The center of the rectangle.", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "rectangle2d", "type": "wpimath.geometry._geometry.Rectangle2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d", "FUNC": "center"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Checks if a point is contained within the rectangle. This is inclusive, if\nthe point lies on the perimeter it will return true.\n\n:param point: The point to check.\n\n:returns: True, if the rectangle contains the point or the perimeter\n          intersects the point.", "returnType": "bool", "args": [{"name": "rectangle2d", "type": "wpimath.geometry._geometry.Rectangle2d"}, {"name": "point", "type": "wpimath.geometry._geometry.Translation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d", "FUNC": "contains"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the distance between the perimeter of the rectangle and the point.\n\n:param point: The point to check.\n\n:returns: The distance (0, if the point is contained by the rectangle)", "returnType": "wpimath.units.meters", "args": [{"name": "rectangle2d", "type": "wpimath.geometry._geometry.Rectangle2d"}, {"name": "point", "type": "wpimath.geometry._geometry.Translation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d", "FUNC": "distance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRectangle2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "", "returnType": "wpimath.geometry._geometry.Rectangle2d", "args": [{"name": "center", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "xWidth", "type": "wpimath.units.feet"}, {"name": "yWidth", "type": "wpimath.units.feet"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d", "FUNC": "fromFeet"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Checks if a point is intersected by the rectangle's perimeter.\n\n:param point: The point to check.\n\n:returns: True, if the rectangle's perimeter intersects the point.", "returnType": "bool", "args": [{"name": "rectangle2d", "type": "wpimath.geometry._geometry.Rectangle2d"}, {"name": "point", "type": "wpimath.geometry._geometry.Translation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d", "FUNC": "intersects"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the nearest point that is contained within the rectangle.\n\n:param point: The point that this will find the nearest point to.\n\n:returns: A new point that is nearest to ``point`` and contained in the\n          rectangle.", "returnType": "wpimath.geometry._geometry.Translation2d", "args": [{"name": "rectangle2d", "type": "wpimath.geometry._geometry.Rectangle2d"}, {"name": "point", "type": "wpimath.geometry._geometry.Translation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d", "FUNC": "nearest"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRectangle2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Rotates the center of the rectangle and returns the new rectangle.\n\n:param other: The rotation to transform by.\n\n:returns: The rotated rectangle.", "returnType": "wpimath.geometry._geometry.Rectangle2d", "args": [{"name": "rectangle2d", "type": "wpimath.geometry._geometry.Rectangle2d"}, {"name": "other", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d", "FUNC": "rotateBy"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the rotational component of the rectangle.\n\n:returns: The rotational component of the rectangle.", "returnType": "wpimath.geometry._geometry.Rotation2d", "args": [{"name": "rectangle2d", "type": "wpimath.geometry._geometry.Rectangle2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d", "FUNC": "rotation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRectangle2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Transforms the center of the rectangle and returns the new rectangle.\n\n:param other: The transform to transform by.\n\n:returns: The transformed rectangle", "returnType": "wpimath.geometry._geometry.Rectangle2d", "args": [{"name": "rectangle2d", "type": "wpimath.geometry._geometry.Rectangle2d"}, {"name": "other", "type": "wpimath.geometry._geometry.Transform2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Rectangle2d", "FUNC": "transformBy"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRectangle2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform2d"}}}}}}}}},
    ],
  };
  if (category.contents) {
    category.contents.push(...subcategories);
  }
  return category;
}
