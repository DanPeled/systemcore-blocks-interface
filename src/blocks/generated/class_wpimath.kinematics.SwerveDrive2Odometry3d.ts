// This file was generated. Do not edit!

import {Category} from "../../toolbox/items";

// Blocks for class wpimath.kinematics.SwerveDrive2Odometry3d

export function initialize() {
}

export function getToolboxCategory(subcategories: any): Category {
  const category = {
    kind: "category",
    name: "SwerveDrive2Odometry3d",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySwerveDrive2Odometry3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "", "returnType": "wpimath.kinematics._kinematics.SwerveDrive2Odometry3d", "args": [{"name": "kinematics", "type": "wpimath.kinematics._kinematics.SwerveDrive2Kinematics"}, {"name": "gyroAngle", "type": "wpimath.geometry._geometry.Rotation3d"}, {"name": "modulePositions", "type": "Tuple[wpimath.kinematics._kinematics.SwerveModulePosition, wpimath.kinematics._kinematics.SwerveModulePosition]"}, {"name": "initialPose", "type": "wpimath.geometry._geometry.Pose3d"}], "importModule": "wpimath.kinematics"}, "fields": {"CLASS": "wpimath.kinematics.SwerveDrive2Odometry3d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveDrive2Kinematics"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveModulePosition]"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose3d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the position of the robot on the field.\n\n:returns: The pose of the robot.", "returnType": "wpimath.geometry._geometry.Pose3d", "args": [{"name": "swerveDrive2Odometry3dBase", "type": "wpimath.kinematics._kinematics.SwerveDrive2Odometry3dBase"}], "importModule": ""}, "fields": {"CLASS": "wpimath.kinematics.SwerveDrive2Odometry3dBase", "FUNC": "getPose"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveDrive2Odometry3dBase"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Resets the pose.\n\n:param pose: The pose to reset to.", "returnType": "None", "args": [{"name": "swerveDrive2Odometry3dBase", "type": "wpimath.kinematics._kinematics.SwerveDrive2Odometry3dBase"}, {"name": "pose", "type": "wpimath.geometry._geometry.Pose3d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.kinematics.SwerveDrive2Odometry3dBase", "FUNC": "resetPose"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveDrive2Odometry3dBase"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose3d"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Resets the robot's position on the field.\n\nThe gyroscope angle does not need to be reset here on the user's robot\ncode. The library automatically takes care of offsetting the gyro angle.\n\n:param gyroAngle:      The angle reported by the gyroscope.\n:param wheelPositions: The current distances measured by each wheel.\n:param pose:           The position on the field that your robot is at.", "returnType": "None", "args": [{"name": "swerveDrive2Odometry3dBase", "type": "wpimath.kinematics._kinematics.SwerveDrive2Odometry3dBase"}, {"name": "gyroAngle", "type": "wpimath.geometry._geometry.Rotation3d"}, {"name": "wheelPositions", "type": "Tuple[wpimath.kinematics._kinematics.SwerveModulePosition, wpimath.kinematics._kinematics.SwerveModulePosition]"}, {"name": "pose", "type": "wpimath.geometry._geometry.Pose3d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.kinematics.SwerveDrive2Odometry3dBase", "FUNC": "resetPosition"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveDrive2Odometry3dBase"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveModulePosition]"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose3d"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Resets the rotation of the pose.\n\n:param rotation: The rotation to reset to.", "returnType": "None", "args": [{"name": "swerveDrive2Odometry3dBase", "type": "wpimath.kinematics._kinematics.SwerveDrive2Odometry3dBase"}, {"name": "rotation", "type": "wpimath.geometry._geometry.Rotation3d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.kinematics.SwerveDrive2Odometry3dBase", "FUNC": "resetRotation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveDrive2Odometry3dBase"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Resets the translation of the pose.\n\n:param translation: The translation to reset to.", "returnType": "None", "args": [{"name": "swerveDrive2Odometry3dBase", "type": "wpimath.kinematics._kinematics.SwerveDrive2Odometry3dBase"}, {"name": "translation", "type": "wpimath.geometry._geometry.Translation3d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.kinematics.SwerveDrive2Odometry3dBase", "FUNC": "resetTranslation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveDrive2Odometry3dBase"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Updates the robot's position on the field using forward kinematics and\nintegration of the pose over time. This method takes in an angle parameter\nwhich is used instead of the angular rate that is calculated from forward\nkinematics, in addition to the current distance measurement at each wheel.\n\n:param gyroAngle:      The angle reported by the gyroscope.\n:param wheelPositions: The current distances measured by each wheel.\n\n:returns: The new pose of the robot.", "returnType": "wpimath.geometry._geometry.Pose3d", "args": [{"name": "swerveDrive2Odometry3dBase", "type": "wpimath.kinematics._kinematics.SwerveDrive2Odometry3dBase"}, {"name": "gyroAngle", "type": "wpimath.geometry._geometry.Rotation3d"}, {"name": "wheelPositions", "type": "Tuple[wpimath.kinematics._kinematics.SwerveModulePosition, wpimath.kinematics._kinematics.SwerveModulePosition]"}], "importModule": ""}, "fields": {"CLASS": "wpimath.kinematics.SwerveDrive2Odometry3dBase", "FUNC": "update"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveDrive2Odometry3dBase"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySwerveModulePosition]"}}}}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
