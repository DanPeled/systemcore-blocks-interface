// This file was generated. Do not edit!

import * as python from "../python.js"

// Blocks for class wpimath.controller.LTVUnicycleController

export function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "LTVUnicycleController",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myLTVUnicycleController"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a linear time-varying unicycle controller with default maximum\ndesired error tolerances of (0.0625 m, 0.125 m, 2 rad) and default maximum\ndesired control effort of (1 m/s, 2 rad/s).\n\n:param dt:          Discretization timestep.\n:param maxVelocity: The maximum velocity for the controller gain lookup\n                    table.\n                    @throws std::domain_error if maxVelocity &lt;= 0.", "returnType": "wpimath._controls._controls.controller.LTVUnicycleController", "args": [{"name": "dt", "type": "wpimath.units.seconds"}, {"name": "maxVelocity", "type": "wpimath.units.meters_per_second"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.LTVUnicycleController"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myLTVUnicycleController"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a linear time-varying unicycle controller.\n\nSee\nhttps://docs.wpilib.org/en/stable/docs/software/advanced-controls/state-space/state-space-intro.html#lqr-tuning\nfor how to select the tolerances.\n\n:param Qelems:      The maximum desired error tolerance for each state.\n:param Relems:      The maximum desired control effort for each input.\n:param dt:          Discretization timestep.\n:param maxVelocity: The maximum velocity for the controller gain lookup\n                    table.\n                    @throws std::domain_error if maxVelocity <= 0 m/s or >= 15 m/s.", "returnType": "wpimath._controls._controls.controller.LTVUnicycleController", "args": [{"name": "Qelems", "type": "Tuple[float, float, float]"}, {"name": "Relems", "type": "Tuple[float, float]"}, {"name": "dt", "type": "wpimath.units.seconds"}, {"name": "maxVelocity", "type": "wpimath.units.meters_per_second"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.LTVUnicycleController"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns true if the pose error is within tolerance of the reference.", "returnType": "bool", "args": [{"name": "lTVUnicycleController", "type": "wpimath._controls._controls.controller.LTVUnicycleController"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LTVUnicycleController", "FUNC": "atReference"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLTVUnicycleController"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myChassisSpeeds"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the linear and angular velocity outputs of the LTV controller.\n\nThe reference pose, linear velocity, and angular velocity should come from\na drivetrain trajectory.\n\n:param currentPose:        The current pose.\n:param poseRef:            The desired pose.\n:param linearVelocityRef:  The desired linear velocity.\n:param angularVelocityRef: The desired angular velocity.", "returnType": "wpimath.kinematics._kinematics.ChassisSpeeds", "args": [{"name": "lTVUnicycleController", "type": "wpimath._controls._controls.controller.LTVUnicycleController"}, {"name": "currentPose", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "poseRef", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "linearVelocityRef", "type": "wpimath.units.meters_per_second"}, {"name": "angularVelocityRef", "type": "wpimath.units.radians_per_second"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LTVUnicycleController", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLTVUnicycleController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myChassisSpeeds"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the linear and angular velocity outputs of the LTV controller.\n\nThe reference pose, linear velocity, and angular velocity should come from\na drivetrain trajectory.\n\n:param currentPose:  The current pose.\n:param desiredState: The desired pose, linear velocity, and angular velocity\n                     from a trajectory.", "returnType": "wpimath.kinematics._kinematics.ChassisSpeeds", "args": [{"name": "lTVUnicycleController", "type": "wpimath._controls._controls.controller.LTVUnicycleController"}, {"name": "currentPose", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "desiredState", "type": "wpimath._controls._controls.trajectory.Trajectory.State"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LTVUnicycleController", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLTVUnicycleController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myState"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Enables and disables the controller for troubleshooting purposes.\n\n:param enabled: If the controller is enabled or not.", "returnType": "None", "args": [{"name": "lTVUnicycleController", "type": "wpimath._controls._controls.controller.LTVUnicycleController"}, {"name": "enabled", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LTVUnicycleController", "FUNC": "setEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLTVUnicycleController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the pose error which is considered tolerable for use with\nAtReference().\n\n:param poseTolerance: Pose error which is tolerable.", "returnType": "None", "args": [{"name": "lTVUnicycleController", "type": "wpimath._controls._controls.controller.LTVUnicycleController"}, {"name": "poseTolerance", "type": "wpimath.geometry._geometry.Pose2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LTVUnicycleController", "FUNC": "setTolerance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLTVUnicycleController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
