// This file was generated. Do not edit!

import {Category} from "../../toolbox/items";

// Blocks for class wpimath.controller.RamseteController

export function initialize() {
}

export function getToolboxCategory(subcategories: Category[] = []): Category {
  const category: Category = {
    kind: "category",
    name: "RamseteController",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRamseteController"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Construct a Ramsete unicycle controller.\n\n:deprecated: Use LTVUnicycleController instead.\n\n:param b:    Tuning parameter (b > 0 rad\u00b2/m\u00b2) for which larger values make\n             convergence more aggressive like a proportional term.\n:param zeta: Tuning parameter (0 rad\u207b\u00b9 < zeta < 1 rad\u207b\u00b9) for which larger\n             values provide more damping in response.", "returnType": "wpimath._controls._controls.controller.RamseteController", "args": [{"name": "b", "type": "float"}, {"name": "zeta", "type": "float"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.RamseteController"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRamseteController"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Construct a Ramsete unicycle controller. The default arguments for\nb and zeta of 2.0 rad\u00b2/m\u00b2 and 0.7 rad\u207b\u00b9 have been well-tested to produce\ndesirable results.\n\n:deprecated: Use LTVUnicycleController instead.", "returnType": "wpimath._controls._controls.controller.RamseteController", "args": [], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.RamseteController"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns true if the pose error is within tolerance of the reference.", "returnType": "bool", "args": [{"name": "ramseteController", "type": "wpimath._controls._controls.controller.RamseteController"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.RamseteController", "FUNC": "atReference"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRamseteController"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myChassisSpeeds"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the next output of the Ramsete controller.\n\nThe reference pose, linear velocity, and angular velocity should come from\na drivetrain trajectory.\n\n:param currentPose:        The current pose.\n:param poseRef:            The desired pose.\n:param linearVelocityRef:  The desired linear velocity.\n:param angularVelocityRef: The desired angular velocity.", "returnType": "wpimath.kinematics._kinematics.ChassisSpeeds", "args": [{"name": "ramseteController", "type": "wpimath._controls._controls.controller.RamseteController"}, {"name": "currentPose", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "poseRef", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "linearVelocityRef", "type": "wpimath.units.meters_per_second"}, {"name": "angularVelocityRef", "type": "wpimath.units.radians_per_second"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.RamseteController", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRamseteController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myChassisSpeeds"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the next output of the Ramsete controller.\n\nThe reference pose, linear velocity, and angular velocity should come from\na drivetrain trajectory.\n\n:param currentPose:  The current pose.\n:param desiredState: The desired pose, linear velocity, and angular velocity\n                     from a trajectory.", "returnType": "wpimath.kinematics._kinematics.ChassisSpeeds", "args": [{"name": "ramseteController", "type": "wpimath._controls._controls.controller.RamseteController"}, {"name": "currentPose", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "desiredState", "type": "wpimath._controls._controls.trajectory.Trajectory.State"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.RamseteController", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRamseteController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myState"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Enables and disables the controller for troubleshooting purposes.\n\n:param enabled: If the controller is enabled or not.", "returnType": "None", "args": [{"name": "ramseteController", "type": "wpimath._controls._controls.controller.RamseteController"}, {"name": "enabled", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.RamseteController", "FUNC": "setEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRamseteController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the pose error which is considered tolerable for use with\nAtReference().\n\n:param poseTolerance: Pose error which is tolerable.", "returnType": "None", "args": [{"name": "ramseteController", "type": "wpimath._controls._controls.controller.RamseteController"}, {"name": "poseTolerance", "type": "wpimath.geometry._geometry.Pose2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.RamseteController", "FUNC": "setTolerance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRamseteController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
    ],
  };
  category.contents.push(...subcategories);
  return category;
}
