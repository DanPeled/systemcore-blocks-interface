// This file was generated. Do not edit!

import * as pythonEnum from "../python_enum";
import * as pythonVariable from "../python_variable";
import {Category} from "../../toolbox/items";

// Blocks for class hal.SimDevice

export function initialize() {
  pythonVariable.initializeInstanceVariableGetter("hal.SimDevice", "str", ["name"], [""]);
  pythonEnum.initializeEnum("hal.SimDevice.Direction", ["kBidir", "kInput", "kOutput"], "Direction of a simulated value (from the perspective of user code).\n\nMembers:\n\n  kInput\n\n  kOutput\n\n  kBidir");
}

export function getToolboxCategory(subcategories: any): Category {
  const category = {
    kind: "category",
    name: "SimDevice",
    contents: [
      {"kind": "block", "type": "get_python_instance_variable", "extraState": {"varType": "str", "key": "instance hal.SimDevice str", "importModule": "", "selfLabel": "simDevice", "selfType": "hal.SimDevice"}, "fields": {"CLASS": "hal.SimDevice", "VAR": "name"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimDevice"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Creates a simulated device.\n\nThe device name must be unique.  Returns null if the device name\nalready exists.  If multiple instances of the same device are desired,\nrecommend appending the instance/unique identifier in brackets to the base\nname, e.g. \"device[1]\".\n\nUsing a device name of the form \"Type:Name\" will create a WebSockets node\nwith a type value of \"Type\" and a device value of \"Name\"\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name: device name", "returnType": "hal._wpiHal.SimDevice", "args": [{"name": "name", "type": "str"}], "importModule": "hal"}, "fields": {"CLASS": "hal.SimDevice"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimDevice"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Creates a simulated device.\n\nThe device name must be unique.  Returns null if the device name\nalready exists.  This is a convenience method that appends index in\nbrackets to the device name, e.g. passing index=1 results in \"device[1]\"\nfor the device name.\n\nUsing a device name of the form \"Type:Name\" will create a WebSockets node\nwith a type value of \"Type\" and a device value of \"Name\"\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:  device name\n:param index: device index number to append to name", "returnType": "hal._wpiHal.SimDevice", "args": [{"name": "name", "type": "str"}, {"name": "index", "type": "int"}], "importModule": "hal"}, "fields": {"CLASS": "hal.SimDevice"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimDevice"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Creates a simulated device.\n\nThe device name must be unique.  Returns null if the device name\nalready exists.  This is a convenience method that appends index and\nchannel in brackets to the device name, e.g. passing index=1 and channel=2\nresults in \"device[1,2]\" for the device name.\n\nUsing a device name of the form \"Type:Name\" will create a WebSockets node\nwith a type value of \"Type\" and a device value of \"Name\"\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:    device name\n:param index:   device index number to append to name\n:param channel: device channel number to append to name", "returnType": "hal._wpiHal.SimDevice", "args": [{"name": "name", "type": "str"}, {"name": "index", "type": "int"}, {"name": "channel", "type": "int"}], "importModule": "hal"}, "fields": {"CLASS": "hal.SimDevice"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimBoolean"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Creates a boolean value on the simulated device.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param initialValue: initial value\n\n:returns: simulated boolean value object", "returnType": "hal._wpiHal.SimBoolean", "args": [{"name": "simDevice", "type": "hal._wpiHal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "initialValue", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "hal.SimDevice", "FUNC": "createBoolean"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimDouble"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Creates a double value on the simulated device.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param initialValue: initial value\n\n:returns: simulated double value object", "returnType": "hal._wpiHal.SimDouble", "args": [{"name": "simDevice", "type": "hal._wpiHal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "initialValue", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "hal.SimDevice", "FUNC": "createDouble"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimEnum"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Creates an enumerated value on the simulated device.\n\nEnumerated values are always in the range 0 to numOptions-1.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param options:      array of option descriptions\n:param initialValue: initial value (selection)\n\n:returns: simulated enum value object", "returnType": "hal._wpiHal.SimEnum", "args": [{"name": "simDevice", "type": "hal._wpiHal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "options", "type": "list[str]"}, {"name": "initialValue", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "hal.SimDevice", "FUNC": "createEnum"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimEnum"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Creates an enumerated value on the simulated device with double values.\n\nEnumerated values are always in the range 0 to numOptions-1.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param options:      array of option descriptions\n:param optionValues: array of option values (must be the same size as\n                     options)\n:param initialValue: initial value (selection)\n\n:returns: simulated enum value object", "returnType": "hal._wpiHal.SimEnum", "args": [{"name": "simDevice", "type": "hal._wpiHal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "options", "type": "list[str]"}, {"name": "optionValues", "type": "list[float]"}, {"name": "initialValue", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "hal.SimDevice", "FUNC": "createEnumDouble"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}, "ARG4": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimInt"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Creates an int value on the simulated device.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param initialValue: initial value\n\n:returns: simulated double value object", "returnType": "hal._wpiHal.SimInt", "args": [{"name": "simDevice", "type": "hal._wpiHal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "initialValue", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "hal.SimDevice", "FUNC": "createInt"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimLong"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Creates a long value on the simulated device.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param initialValue: initial value\n\n:returns: simulated double value object", "returnType": "hal._wpiHal.SimLong", "args": [{"name": "simDevice", "type": "hal._wpiHal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "initialValue", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "hal.SimDevice", "FUNC": "createLong"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the name of the simulated device.\n\n:returns: name", "returnType": "str", "args": [{"name": "simDevice", "type": "hal._wpiHal.SimDevice"}], "importModule": ""}, "fields": {"CLASS": "hal.SimDevice", "FUNC": "getName"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}},
      {"kind": "block", "type": "get_python_enum_value", "extraState": {"enumType": "hal.SimDevice.Direction", "importModule": "hal"}, "fields": {"ENUM_TYPE": "hal.SimDevice.Direction", "ENUM_VALUE": "kBidir"}},
      {"kind": "block", "type": "get_python_enum_value", "extraState": {"enumType": "hal.SimDevice.Direction", "importModule": "hal"}, "fields": {"ENUM_TYPE": "hal.SimDevice.Direction", "ENUM_VALUE": "kInput"}},
      {"kind": "block", "type": "get_python_enum_value", "extraState": {"enumType": "hal.SimDevice.Direction", "importModule": "hal"}, "fields": {"ENUM_TYPE": "hal.SimDevice.Direction", "ENUM_VALUE": "kOutput"}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
