// This file was generated. Do not edit!

// Blocks for class wpilib.AnalogEncoder

export function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "AnalogEncoder",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myAnalogEncoder"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Construct a new AnalogEncoder attached to a specific AnalogIn channel.\n\n:param channel: the analog input channel to attach to", "returnType": "wpilib._wpilib.AnalogEncoder", "args": [{"name": "channel", "type": "int"}], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.AnalogEncoder"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myAnalogEncoder"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Construct a new AnalogEncoder attached to a specific AnalogInput.\n\n:param analogInput: the analog input to attach to", "returnType": "wpilib._wpilib.AnalogEncoder", "args": [{"name": "analogInput", "type": "wpilib._wpilib.AnalogInput"}], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.AnalogEncoder"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogInput"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the encoder value since the last reset.\n\nThis is reported in rotations since the last reset.\n\n:returns: the encoder value in rotations", "returnType": "wpimath.units.turns", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "get"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the absolute position of the analog encoder.\n\nGetAbsolutePosition() - GetPositionOffset() will give an encoder\nabsolute position relative to the last reset. This could potentially be\nnegative, which needs to be accounted for.\n\nThis will not account for rollovers, and will always be just the raw\nabsolute position.\n\n:returns: the absolute position", "returnType": "float", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "getAbsolutePosition"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the channel number.\n\n:returns: The channel number.", "returnType": "int", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "getChannel"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the distance the sensor has driven since the last reset as scaled by\nthe value from SetDistancePerRotation.\n\n:returns: The distance driven since the last reset", "returnType": "float", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "getDistance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the distance per rotation for this encoder.\n\n:returns: The scale factor that will be used to convert rotation to useful\n          units.", "returnType": "float", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "getDistancePerRotation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the offset of position relative to the last reset.\n\nGetAbsolutePosition() - GetPositionOffset() will give an encoder absolute\nposition relative to the last reset. This could potentially be negative,\nwhich needs to be accounted for.\n\n:returns: the position offset", "returnType": "float", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "getPositionOffset"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "None", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}, {"name": "builder", "type": "wpiutil._wpiutil.SendableBuilder"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "initSendable"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySendableBuilder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Reset the Encoder distance to zero.", "returnType": "None", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "reset"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Set the distance per rotation of the encoder. This sets the multiplier used\nto determine the distance driven based on the rotation value from the\nencoder. Set this value based on the how far the mechanism travels in 1\nrotation of the encoder, and factor in gearing reductions following the\nencoder shaft. This distance can be in any units you like, linear or\nangular.\n\n:param distancePerRotation: the distance per rotation of the encoder", "returnType": "None", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}, {"name": "distancePerRotation", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "setDistancePerRotation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Set the position offset.\n\nThis must be in the range of 0-1.\n\n:param offset: the offset", "returnType": "None", "args": [{"name": "analogEncoder", "type": "wpilib._wpilib.AnalogEncoder"}, {"name": "offset", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.AnalogEncoder", "FUNC": "setPositionOffset"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogEncoder"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
