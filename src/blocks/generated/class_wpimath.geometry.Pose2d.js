// This file was generated. Do not edit!

import * as python from "../python.js";

// Blocks for class wpimath.geometry.Pose2d

python.PythonVariableGetterNames["instance wpimath.geometry.Pose2d wpimath.units.meters"] = ["x", "y"];
python.PythonVariableGetterTooltips["instance wpimath.geometry.Pose2d wpimath.units.meters"] = ["", ""];
python.PythonVariableGetterNames["instance wpimath.geometry.Pose2d wpimath.units.feet"] = ["x_feet", "y_feet"];
python.PythonVariableGetterTooltips["instance wpimath.geometry.Pose2d wpimath.units.feet"] = ["", ""];


export function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "Pose2d",
    contents: [
      {"kind": "block", "type": "get_python_instance_variable", "extraState": {"varType": "wpimath.units.meters", "key": "instance wpimath.geometry.Pose2d wpimath.units.meters", "importModule": "", "selfLabel": "pose2d", "selfType": "wpimath.geometry.Pose2d"}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "VAR": "x"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
      {"kind": "block", "type": "get_python_instance_variable", "extraState": {"varType": "wpimath.units.meters", "key": "instance wpimath.geometry.Pose2d wpimath.units.meters", "importModule": "", "selfLabel": "pose2d", "selfType": "wpimath.geometry.Pose2d"}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "VAR": "y"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
      {"kind": "block", "type": "get_python_instance_variable", "extraState": {"varType": "wpimath.units.feet", "key": "instance wpimath.geometry.Pose2d wpimath.units.feet", "importModule": "", "selfLabel": "pose2d", "selfType": "wpimath.geometry.Pose2d"}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "VAR": "x_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
      {"kind": "block", "type": "get_python_instance_variable", "extraState": {"varType": "wpimath.units.feet", "key": "instance wpimath.geometry.Pose2d wpimath.units.feet", "importModule": "", "selfLabel": "pose2d", "selfType": "wpimath.geometry.Pose2d"}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "VAR": "y_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a pose at the origin facing toward the positive X axis.", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Pose2d"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a pose with the specified translation and rotation.\n\n:param translation: The translational component of the pose.\n:param rotation:    The rotational component of the pose.", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "translation", "type": "wpimath.geometry._geometry.Translation2d"}, {"name": "rotation", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Pose2d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a pose with x and y translations instead of a separate\nTranslation2d.\n\n:param x:        The x component of the translational component of the pose.\n:param y:        The y component of the translational component of the pose.\n:param rotation: The rotational component of the pose.", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "x", "type": "wpimath.units.meters"}, {"name": "y", "type": "wpimath.units.meters"}, {"name": "rotation", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Pose2d"}, "inputs": {"ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "x", "type": "wpimath.units.meters"}, {"name": "y", "type": "wpimath.units.meters"}, {"name": "angle", "type": "wpimath.units.radians"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Pose2d"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the X component of the pose's translation.\n\n:returns: The x component of the pose's translation.", "returnType": "wpimath.units.meters", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "X"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the Y component of the pose's translation.\n\n:returns: The y component of the pose's translation.", "returnType": "wpimath.units.meters", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "Y"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Obtain a new Pose2d from a (constant curvature) velocity.\n\nSee https://file.tavsys.net/control/controls-engineering-in-frc.pdf section\n10.2 \"Pose exponential\" for a derivation.\n\nThe twist is a change in pose in the robot's coordinate frame since the\nprevious pose update. When the user runs exp() on the previous known\nfield-relative pose with the argument being the twist, the user will\nreceive the new field-relative pose.\n\n\"Exp\" represents the pose exponential, which is solving a differential\nequation moving the pose forward in time.\n\n:param twist: The change in pose in the robot's coordinate frame since the\n              previous pose update. For example, if a non-holonomic robot moves forward\n              0.01 meters and changes angle by 0.5 degrees since the previous pose\n              update, the twist would be Twist2d{0.01_m, 0_m, 0.5_deg}.\n\n:returns: The new pose of the robot.", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "twist", "type": "wpimath.geometry._geometry.Twist2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "exp"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTwist2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "x", "type": "wpimath.units.feet"}, {"name": "y", "type": "wpimath.units.feet"}, {"name": "r", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "fromFeet"}, "inputs": {"ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "x", "type": "wpimath.units.feet"}, {"name": "y", "type": "wpimath.units.feet"}, {"name": "angle", "type": "wpimath.units.radians"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "fromFeet"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTwist2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns a Twist2d that maps this pose to the end pose. If c is the output\nof a.Log(b), then a.Exp(c) would yield b.\n\n:param end: The end pose for the transformation.\n\n:returns: The twist that maps this to end.", "returnType": "wpimath.geometry._geometry.Twist2d", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "end", "type": "wpimath.geometry._geometry.Pose2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "log"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the nearest Pose2d from a collection of poses\n\n:param poses: The collection of poses.\n\n:returns: The nearest Pose2d from the collection.", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "poses", "type": "List[wpimath.geometry._geometry.Pose2d]"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "nearest"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the current pose relative to the given pose.\n\nThis function can often be used for trajectory tracking or pose\nstabilization algorithms to get the error between the reference and the\ncurrent pose.\n\n:param other: The pose that is the origin of the new coordinate frame that\n              the current pose will be converted into.\n\n:returns: The current pose relative to the new origin pose.", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "other", "type": "wpimath.geometry._geometry.Pose2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "relativeTo"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Rotates the pose around the origin and returns the new pose.\n\n:param other: The rotation to transform the pose by.\n\n:returns: The rotated pose.", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "other", "type": "wpimath.geometry._geometry.Rotation2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "rotateBy"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the underlying rotation.\n\n:returns: Reference to the rotational component of the pose.", "returnType": "wpimath.geometry._geometry.Rotation2d", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "rotation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Transforms the pose by the given transformation and returns the new pose.\nSee + operator for the matrix multiplication performed.\n\n:param other: The transform to transform the pose by.\n\n:returns: The transformed pose.", "returnType": "wpimath.geometry._geometry.Pose2d", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "other", "type": "wpimath.geometry._geometry.Transform2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "transformBy"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the underlying translation.\n\n:returns: Reference to the translational component of the pose.", "returnType": "wpimath.geometry._geometry.Translation2d", "args": [{"name": "pose2d", "type": "wpimath.geometry._geometry.Pose2d"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Pose2d", "FUNC": "translation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
