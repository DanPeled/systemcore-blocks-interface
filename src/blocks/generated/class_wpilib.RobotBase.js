// This file was generated. Do not edit!

import * as python from "../python.js"

// Blocks for class wpilib.RobotBase

export function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "RobotBase",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRobotBase"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructor for a generic robot program.\n\nUser code can be placed in the constructor that runs before the\nAutonomous or Operator Control period starts. The constructor will run to\ncompletion before Autonomous is entered.\n\nThis must be used to ensure that the communications code starts. In the\nfuture it would be nice to put this code into it's own task that loads on\nboot so ensure that it runs.", "returnType": "wpilib._wpilib.RobotBase", "args": [], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.RobotBase"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Ends the main loop in StartCompetition().", "returnType": "None", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "endCompetition"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTuple"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "More efficient way to determine what state the robot is in.\n\n:returns: booleans representing enabled, isautonomous, istest\n\n.. versionadded:: 2019.2.1\n\n.. note:: This function only exists in RobotPy", "returnType": "tuple[bool, bool, bool]", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "getControlState"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRuntimeType"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "Get the current runtime type.\n\n:returns: Current runtime type.", "returnType": "wpilib._wpilib.RuntimeType", "args": [], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "getRuntimeType"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Determine if the robot is currently in Autonomous mode.\n\n:returns: True if the robot is currently operating Autonomously as determined\n          by the Driver Station.", "returnType": "bool", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isAutonomous"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Determine if the robot is currently in Autonomous mode and enabled.\n\n:returns: True if the robot us currently operating Autonomously while enabled\n          as determined by the Driver Station.", "returnType": "bool", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isAutonomousEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Determine if the Robot is currently disabled.\n\n:returns: True if the Robot is currently disabled by the Driver Station.", "returnType": "bool", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isDisabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Determine if the Robot is currently enabled.\n\n:returns: True if the Robot is currently enabled by the Driver Station.", "returnType": "bool", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
      {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "Get if the robot is real.\n\n:returns: If the robot is running in the real world.", "returnType": "bool", "args": [], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isReal"}},
      {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "Get if the robot is a simulation.\n\n:returns: If the robot is running in simulation.", "returnType": "bool", "args": [], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isSimulation"}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Determine if the robot is currently in Operator Control mode.\n\n:returns: True if the robot is currently operating in Tele-Op mode as\n          determined by the Driver Station.", "returnType": "bool", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isTeleop"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Determine if the robot is current in Operator Control mode and enabled.\n\n:returns: True if the robot is currently operating in Tele-Op mode while\n          enabled as determined by the Driver Station.", "returnType": "bool", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isTeleopEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Determine if the robot is currently in Test mode.\n\n:returns: True if the robot is currently running in Test mode as determined\n          by the Driver Station.", "returnType": "bool", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isTest"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Determine if the robot is current in Test mode and enabled.\n\n:returns: True if the robot is currently operating in Test mode while\n          enabled as determined by the Driver Station.", "returnType": "bool", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "isTestEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
      {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "Starting point for the application", "returnType": "object", "args": [{"name": "robot_cls", "type": "object"}], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "main"}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Start the main robot code. This function will be called once and should not\nexit until signalled by EndCompetition()", "returnType": "None", "args": [{"name": "robotBase", "type": "wpilib._wpilib.RobotBase"}], "importModule": ""}, "fields": {"CLASS": "wpilib.RobotBase", "FUNC": "startCompetition"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotBase"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
