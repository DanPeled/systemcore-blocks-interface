// This file was generated. Do not edit!

import {Category} from "../../toolbox/items";

// Blocks for class wpilib.PneumaticsControlModule

export function initialize() {
}

export function getToolboxCategory(subcategories: Category[] = []): Category {
  const category: Category = {
    kind: "category",
    name: "PneumaticsControlModule",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a PneumaticsControlModule with the default ID (0).", "returnType": "wpilib._wpilib.PneumaticsControlModule", "args": [], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.PneumaticsControlModule"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a PneumaticsControlModule.\n\n:param module: module number to construct", "returnType": "wpilib._wpilib.PneumaticsControlModule", "args": [{"name": "module", "type": "int"}], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.PneumaticsControlModule"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "int", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "mask", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "checkAndReserveSolenoids"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "channel", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "checkSolenoidChannel"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Clears all sticky faults on this device.", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "clearAllStickyFaults"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Disables the compressor. The compressor will not turn on until\nEnableCompressorDigital() is called.", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "disableCompressor"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Enables the compressor in digital mode. Analog mode is unsupported by the\nCTRE PCM.\n\n:param minPressure: Unsupported.\n:param maxPressure: Unsupported.\n                    @see EnableCompressorDigital()", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "minPressure", "type": "wpimath.units.pounds_per_square_inch"}, {"name": "maxPressure", "type": "wpimath.units.pounds_per_square_inch"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "enableCompressorAnalog"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "enableCompressorDigital"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Enables the compressor in digital mode. Hybrid mode is unsupported by the\nCTRE PCM.\n\n:param minPressure: Unsupported.\n:param maxPressure: Unsupported.\n                    @see EnableCompressorDigital()", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "minPressure", "type": "wpimath.units.pounds_per_square_inch"}, {"name": "maxPressure", "type": "wpimath.units.pounds_per_square_inch"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "enableCompressorHybrid"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "index", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "fireOneShot"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Unsupported by the CTRE PCM.\n\n:param channel: Unsupported.\n\n:returns: 0", "returnType": "wpimath.units.volts", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "channel", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getAnalogVoltage"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getCompressor"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCompressorConfigType"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "wpilib._wpilib.CompressorConfigType", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getCompressorConfigType"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "wpimath.units.amperes", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getCompressorCurrent"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Return whether the compressor current is currently too high.\n\n:returns: True if the compressor current is too high, otherwise false.\n          @see GetCompressorCurrentTooHighStickyFault()", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getCompressorCurrentTooHighFault"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the compressor current has been too high since sticky\nfaults were last cleared. This fault is persistent and can be cleared by\nClearAllStickyFaults()\n\n:returns: True if the compressor current has been too high since sticky\n          faults were last cleared.\n          @see GetCompressorCurrentTooHighFault()", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getCompressorCurrentTooHighStickyFault"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the compressor is currently disconnected.\n\n:returns: True if compressor is currently disconnected, otherwise false.\n          @see GetCompressorNotConnectedStickyFault()", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getCompressorNotConnectedFault"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the compressor has been disconnected since sticky faults\nwere last cleared. This fault is persistent and can be cleared by\nClearAllStickyFaults()\n\n:returns: True if the compressor has been disconnected since sticky faults\n          were last cleared, otherwise false.\n          @see GetCompressorNotConnectedFault()", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getCompressorNotConnectedStickyFault"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the compressor is currently shorted.\n\n:returns: True if the compressor is currently shorted, otherwise false.\n          @see GetCompressorShortedStickyFault()", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getCompressorShortedFault"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the compressor has been shorted since sticky faults were\nlast cleared. This fault is persistent and can be cleared by\nClearAllStickyFaults()\n\n:returns: True if the compressor has been shorted since sticky faults were\n          last cleared, otherwise false.\n          @see GetCompressorShortedFault()", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getCompressorShortedStickyFault"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "For internal use to get the default for a specific type.\n\n:param moduleType: module type\n\n:returns: module default", "returnType": "int", "args": [{"name": "moduleType", "type": "wpilib._wpilib.PneumaticsModuleType"}], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getDefaultForType"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsModuleType"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPneumaticsBase"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "For internal use to get a module for a specific type.\n\n:param module:     module number\n:param moduleType: module type\n\n:returns: module", "returnType": "wpilib._wpilib.PneumaticsBase", "args": [{"name": "module", "type": "int"}, {"name": "moduleType", "type": "wpilib._wpilib.PneumaticsModuleType"}], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getForType"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsModuleType"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "int", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getModuleNumber"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Unsupported by the CTRE PCM.\n\n:param channel: Unsupported.\n\n:returns: 0", "returnType": "wpimath.units.pounds_per_square_inch", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "channel", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getPressure"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getPressureSwitch"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "int", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getSolenoidDisabledList"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the solenoid is currently reporting a voltage fault.\n\n:returns: True if solenoid is reporting a fault, otherwise false.\n          @see GetSolenoidVoltageStickyFault()", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getSolenoidVoltageFault"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns whether the solenoid has reported a voltage fault since sticky\nfaults were last cleared. This fault is persistent and can be cleared by\nClearAllStickyFaults()\n\n:returns: True if solenoid is reporting a fault, otherwise false.\n          @see GetSolenoidVoltageFault()", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getSolenoidVoltageStickyFault"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "int", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "getSolenoids"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCompressor"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "wpilib._wpilib.Compressor", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "makeCompressor"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myDoubleSolenoid"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "wpilib._wpilib.DoubleSolenoid", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "forwardChannel", "type": "int"}, {"name": "reverseChannel", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "makeDoubleSolenoid"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySolenoid"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "wpilib._wpilib.Solenoid", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "channel", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "makeSolenoid"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "bool", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "reserveCompressor"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "index", "type": "int"}, {"name": "duration", "type": "wpimath.units.seconds"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "setOneShotDuration"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "mask", "type": "int"}, {"name": "values", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "setSolenoids"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "unreserveCompressor"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "None", "args": [{"name": "pneumaticsControlModule", "type": "wpilib._wpilib.PneumaticsControlModule"}, {"name": "mask", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.PneumaticsControlModule", "FUNC": "unreserveSolenoids"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsControlModule"}}}}}},
    ],
  };
  category.contents.push(...subcategories);
  return category;
}
