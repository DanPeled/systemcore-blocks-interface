// This file was generated. Do not edit!

import {Category} from "../../toolbox/items";

// Blocks for class wpilib.counter.Tachometer

export function initialize() {
}

export function getToolboxCategory(subcategories: any): Category {
  const category = {
    kind: "category",
    name: "Tachometer",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTachometer"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a new tachometer.\n\n:param source: The source.", "returnType": "wpilib.counter._counter.Tachometer", "args": [{"name": "source", "type": "wpilib._wpilib.DigitalSource"}], "importModule": "wpilib.counter"}, "fields": {"CLASS": "wpilib.counter.Tachometer"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalSource"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTachometer"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a new tachometer.\n\n:param source: The source.", "returnType": "wpilib.counter._counter.Tachometer", "args": [{"name": "source", "type": "wpilib._wpilib.DigitalSource"}], "importModule": "wpilib.counter"}, "fields": {"CLASS": "wpilib.counter.Tachometer"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalSource"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Gets the number of edges per revolution.\n\n:returns: Edges per revolution.", "returnType": "int", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "getEdgesPerRevolution"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Gets the tachometer frequency.\n\n:returns: Current frequency.", "returnType": "wpimath.units.hertz", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "getFrequency"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Gets the tachometer period.\n\n:returns: Current period.", "returnType": "wpimath.units.seconds", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "getPeriod"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Gets the current tachometer revolutions per minute.\n\nSetEdgesPerRevolution must be set with a non 0 value for this to work.\n\n:returns: Current RPM.", "returnType": "wpimath.units.revolutions_per_minute", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "getRevolutionsPerMinute"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Gets the current tachometer revolutions per second.\n\nSetEdgesPerRevolution must be set with a non 0 value for this to work.\n\n:returns: Current RPS.", "returnType": "wpimath.units.turns_per_second", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "getRevolutionsPerSecond"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Gets the number of sample to average.\n\n:returns: Samples to average.", "returnType": "int", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "getSamplesToAverage"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Gets if the tachometer is stopped.\n\n:returns: True if the tachometer is stopped.", "returnType": "bool", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "getStopped"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Initializes this Sendable object.\n\n:param builder: sendable builder", "returnType": "None", "args": [{"name": "sendable", "type": "wpiutil._wpiutil.Sendable"}, {"name": "builder", "type": "wpiutil._wpiutil.SendableBuilder"}], "importModule": ""}, "fields": {"CLASS": "wpiutil.Sendable", "FUNC": "initSendable"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySendable"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySendableBuilder"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the number of edges per revolution.\n\n:param edges: Edges per revolution.", "returnType": "None", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}, {"name": "edges", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "setEdgesPerRevolution"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the maximum period before the tachometer is considered stopped.\n\n:param maxPeriod: The max period.", "returnType": "None", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}, {"name": "maxPeriod", "type": "wpimath.units.seconds"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "setMaxPeriod"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the number of samples to average.\n\n:param samples: Samples to average.", "returnType": "None", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}, {"name": "samples", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "setSamplesToAverage"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets if to update when empty.\n\n:param updateWhenEmpty: True to update when empty.", "returnType": "None", "args": [{"name": "tachometer", "type": "wpilib.counter._counter.Tachometer"}, {"name": "updateWhenEmpty", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.counter.Tachometer", "FUNC": "setUpdateWhenEmpty"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTachometer"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
