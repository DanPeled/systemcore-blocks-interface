// This file was generated. Do not edit!

import * as python from "../python.js"

// Blocks for class wpimath.controller.LTVDifferentialDriveController

function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "LTVDifferentialDriveController",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myLTVDifferentialDriveController"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a linear time-varying differential drive controller.\n\nSee\nhttps://docs.wpilib.org/en/stable/docs/software/advanced-controls/state-space/state-space-intro.html#lqr-tuning\nfor how to select the tolerances.\n\n:param plant:      The differential drive velocity plant.\n:param trackwidth: The distance between the differential drive's left and\n                   right wheels.\n:param Qelems:     The maximum desired error tolerance for each state.\n:param Relems:     The maximum desired control effort for each input.\n:param dt:         Discretization timestep.\n                   @throws std::domain_error if max velocity of plant with 12 V input <= 0 m/s\n                   or >= 15 m/s.", "returnType": "wpimath._controls._controls.controller.LTVDifferentialDriveController", "args": [{"name": "plant", "type": "wpimath._controls._controls.system.LinearSystem_2_2_2"}, {"name": "trackwidth", "type": "wpimath.units.meters"}, {"name": "Qelems", "type": "Tuple[float, float, float, float, float]"}, {"name": "Relems", "type": "Tuple[float, float]"}, {"name": "dt", "type": "wpimath.units.seconds"}], "importModule": "wpimath.controller"}, "fields": {"CLASS": "wpimath.controller.LTVDifferentialDriveController"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystem_2_2_2"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns true if the pose error is within tolerance of the reference.", "returnType": "bool", "args": [{"name": "lTVDifferentialDriveController", "type": "wpimath._controls._controls.controller.LTVDifferentialDriveController"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LTVDifferentialDriveController", "FUNC": "atReference"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLTVDifferentialDriveController"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myDifferentialDriveWheelVoltages"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the left and right output voltages of the LTV controller.\n\nThe reference pose, linear velocity, and angular velocity should come from\na drivetrain trajectory.\n\n:param currentPose:      The current pose.\n:param leftVelocity:     The current left velocity.\n:param rightVelocity:    The current right velocity.\n:param poseRef:          The desired pose.\n:param leftVelocityRef:  The desired left velocity.\n:param rightVelocityRef: The desired right velocity.", "returnType": "wpimath._controls._controls.controller.DifferentialDriveWheelVoltages", "args": [{"name": "lTVDifferentialDriveController", "type": "wpimath._controls._controls.controller.LTVDifferentialDriveController"}, {"name": "currentPose", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "leftVelocity", "type": "wpimath.units.meters_per_second"}, {"name": "rightVelocity", "type": "wpimath.units.meters_per_second"}, {"name": "poseRef", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "leftVelocityRef", "type": "wpimath.units.meters_per_second"}, {"name": "rightVelocityRef", "type": "wpimath.units.meters_per_second"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LTVDifferentialDriveController", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLTVDifferentialDriveController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG4": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myDifferentialDriveWheelVoltages"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the left and right output voltages of the LTV controller.\n\nThe reference pose, linear velocity, and angular velocity should come from\na drivetrain trajectory.\n\n:param currentPose:   The current pose.\n:param leftVelocity:  The left velocity.\n:param rightVelocity: The right velocity.\n:param desiredState:  The desired pose, linear velocity, and angular velocity\n                      from a trajectory.", "returnType": "wpimath._controls._controls.controller.DifferentialDriveWheelVoltages", "args": [{"name": "lTVDifferentialDriveController", "type": "wpimath._controls._controls.controller.LTVDifferentialDriveController"}, {"name": "currentPose", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "leftVelocity", "type": "wpimath.units.meters_per_second"}, {"name": "rightVelocity", "type": "wpimath.units.meters_per_second"}, {"name": "desiredState", "type": "wpimath._controls._controls.trajectory.Trajectory.State"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LTVDifferentialDriveController", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLTVDifferentialDriveController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG4": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myState"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the pose error which is considered tolerable for use with\nAtReference().\n\n:param poseTolerance:          Pose error which is tolerable.\n:param leftVelocityTolerance:  Left velocity error which is tolerable.\n:param rightVelocityTolerance: Right velocity error which is tolerable.", "returnType": "None", "args": [{"name": "lTVDifferentialDriveController", "type": "wpimath._controls._controls.controller.LTVDifferentialDriveController"}, {"name": "poseTolerance", "type": "wpimath.geometry._geometry.Pose2d"}, {"name": "leftVelocityTolerance", "type": "wpimath.units.meters_per_second"}, {"name": "rightVelocityTolerance", "type": "wpimath.units.meters_per_second"}], "importModule": ""}, "fields": {"CLASS": "wpimath.controller.LTVDifferentialDriveController", "FUNC": "setTolerance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLTVDifferentialDriveController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}

export {getToolboxCategory}
