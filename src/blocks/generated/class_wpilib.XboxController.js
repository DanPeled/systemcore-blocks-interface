// This file was generated. Do not edit!

// Blocks for class wpilib.XboxController

export function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "XboxController",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myXboxController"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Construct an instance of an Xbox controller.\n\nThe controller index is the USB port on the Driver Station.\n\n:param port: The port on the Driver Station that the controller is plugged\n             into (0-5).", "returnType": "wpilib._wpilib.XboxController", "args": [{"name": "port", "type": "int"}], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.XboxController"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the A button's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the A button's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "A"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the B button's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the B button's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "B"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around this angle of a POV on the\nHID.\n\nThe POV angles start at 0 in the up direction, and increase clockwise\n(eg right is 90, upper-left is 315).\n\n:param loop:  the event loop instance to attach the event to.\n:param angle: POV angle in degrees, or -1 for the center / not pressed.\n\n:returns: a BooleanEvent instance based around this angle of a POV on the\n          HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "angle", "type": "int"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POV"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around this angle of a POV on the\nHID.\n\nThe POV angles start at 0 in the up direction, and increase clockwise\n(eg right is 90, upper-left is 315).\n\n:param loop:  the event loop instance to attach the event to.\n:param pov:   index of the POV to read (starting at 0). Defaults to 0.\n:param angle: POV angle in degrees, or -1 for the center / not pressed.\n\n:returns: a BooleanEvent instance based around this angle of a POV on the\n          HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "pov", "type": "int"}, {"name": "angle", "type": "int"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POV"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around the center (not pressed) of\nthe default (index 0) POV on the HID.\n\n:returns: a BooleanEvent instance based around the center of a POV on the\n          HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POVCenter"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around the 180 degree angle (down)\nof the default (index 0) POV on the HID.\n\n:returns: a BooleanEvent instance based around the 180 degree angle of a POV\n          on the HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POVDown"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around the 225 degree angle (down\nleft) of the default (index 0) POV on the HID.\n\n:returns: a BooleanEvent instance based around the 225 degree angle of a POV\n          on the HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POVDownLeft"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around the 135 degree angle (right\ndown) of the default (index 0) POV on the HID.\n\n:returns: a BooleanEvent instance based around the 135 degree angle of a POV\n          on the HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POVDownRight"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around the 270 degree angle (left)\nof the default (index 0) POV on the HID.\n\n:returns: a BooleanEvent instance based around the 270 degree angle of a POV\n          on the HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POVLeft"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around the 90 degree angle (right)\nof the default (index 0) POV on the HID.\n\n:returns: a BooleanEvent instance based around the 90 degree angle of a POV\n          on the HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POVRight"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around the 0 degree angle (up) of\nthe default (index 0) POV on the HID.\n\n:returns: a BooleanEvent instance based around the 0 degree angle of a POV on\n          the HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POVUp"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around the 315 degree angle (left\nup) of the default (index 0) POV on the HID.\n\n:returns: a BooleanEvent instance based around the 315 degree angle of a POV\n          on the HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POVUpLeft"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs a BooleanEvent instance based around the 45 degree angle (right\nup) of the default (index 0) POV on the HID.\n\n:returns: a BooleanEvent instance based around the 45 degree angle of a POV\n          on the HID.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "POVUpRight"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the X button's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the X button's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "X"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the Y button's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the Y button's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "Y"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance that is true when the axis value is greater\nthan threshold\n\n:param axis:      The axis to read, starting at 0.\n:param threshold: The value above which this trigger should return true.\n:param loop:      the event loop instance to attach the event to.\n\n:returns: an event instance that is true when the axis value is greater than\n          the provided threshold.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "axis", "type": "int"}, {"name": "threshold", "type": "float"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "axisGreaterThan"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance that is true when the axis value is less than\nthreshold\n\n:param axis:      The axis to read, starting at 0.\n:param threshold: The value below which this trigger should return true.\n:param loop:      the event loop instance to attach the event to.\n\n:returns: an event instance that is true when the axis value is less than the\n          provided threshold.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "axis", "type": "int"}, {"name": "threshold", "type": "float"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "axisLessThan"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the back button's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the back button's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "back"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around this button's digital signal.\n\n:param button: the button index\n:param loop:   the event loop instance to attach the event to.\n\n:returns: an event instance representing the button's digital signal attached\n          to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "button", "type": "int"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "button"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the A button on the controller.\n\n:returns: The state of the button.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getAButton"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the A button was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getAButtonPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the A button was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getAButtonReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the number of axes for the HID.\n\n:returns: the number of axis for the current HID", "returnType": "int", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getAxisCount"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the axis type of a joystick axis.\n\n:returns: the axis type of a joystick axis.", "returnType": "int", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "axis", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getAxisType"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the B button on the controller.\n\n:returns: The state of the button.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getBButton"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the B button was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getBButtonPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the B button was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getBButtonReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the back button on the controller.\n\n:returns: The state of the button.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getBackButton"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the back button was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getBackButtonPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the back button was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getBackButtonReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the number of buttons for the HID.\n\n:returns: the number of buttons on the current HID", "returnType": "int", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getButtonCount"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the left bumper (LB) button on the controller.\n\n:returns: the state of the button", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getLeftBumper"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the left bumper (LB) was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getLeftBumperPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the left bumper (LB) was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getLeftBumperReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the left stick button (LSB) on the controller.\n\n:returns: the state of the button", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getLeftStickButton"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the left stick button (LSB) was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getLeftStickButtonPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the left stick button (LSB) was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getLeftStickButtonReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the left trigger (LT) axis value of the controller. Note that this axis\nis bound to the range of [0, 1] as opposed to the usual [-1, 1].\n\n:returns: the axis value", "returnType": "float", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getLeftTriggerAxis"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the X axis value of left side of the controller.\n\n:returns: the axis value", "returnType": "float", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getLeftX"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the Y axis value of left side of the controller.\n\n:returns: the axis value", "returnType": "float", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getLeftY"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the name of the HID.\n\n:returns: the name of the HID.", "returnType": "str", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getName"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the angle in degrees of a POV on the HID.\n\nThe POV angles start at 0 in the up direction, and increase clockwise\n(e.g. right is 90, upper-left is 315).\n\n:param pov: The index of the POV to read (starting at 0)\n\n:returns: the angle of the POV in degrees, or -1 if the POV is not pressed.", "returnType": "int", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "pov", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getPOV"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"shadow": {"type": "math_number", "fields": {"NUM": 0.0}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the number of POVs for the HID.\n\n:returns: the number of POVs for the current HID", "returnType": "int", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getPOVCount"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the port number of the HID.\n\n:returns: The port number of the HID.", "returnType": "int", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getPort"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the value of the axis.\n\n:param axis: The axis to read, starting at 0.\n\n:returns: The value of the axis.", "returnType": "float", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "axis", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getRawAxis"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the button value (starting at button 1).\n\nThe buttons are returned in a single 16 bit value with one bit representing\nthe state of each button. The appropriate button is returned as a boolean\nvalue.\n\nThis method returns true if the button is being held down at the time\nthat this method is being called.\n\n:param button: The button number to be read (starting at 1)\n\n:returns: The state of the button.", "returnType": "bool", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "button", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getRawButton"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the button was pressed since the last check. %Button indexes begin\nat 1.\n\nThis method returns true if the button went from not pressed to held down\nsince the last time this method was called. This is useful if you only\nwant to call a function once when you press the button.\n\n:param button: The button index, beginning at 1.\n\n:returns: Whether the button was pressed since the last check.", "returnType": "bool", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "button", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getRawButtonPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the button was released since the last check. %Button indexes begin\nat 1.\n\nThis method returns true if the button went from held down to not pressed\nsince the last time this method was called. This is useful if you only\nwant to call a function once when you release the button.\n\n:param button: The button index, beginning at 1.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "button", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getRawButtonReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the right bumper (RB) button on the controller.\n\n:returns: the state of the button", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getRightBumper"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the right bumper (RB) was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getRightBumperPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the right bumper (RB) was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getRightBumperReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the right stick button (RSB) on the controller.\n\n:returns: the state of the button", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getRightStickButton"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the right stick button (RSB) was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getRightStickButtonPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the right stick button (RSB) was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getRightStickButtonReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the right trigger (RT) axis value of the controller. Note that this\naxis is bound to the range of [0, 1] as opposed to the usual [-1, 1].\n\n:returns: the axis value", "returnType": "float", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getRightTriggerAxis"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the X axis value of right side of the controller.\n\n:returns: the axis value", "returnType": "float", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getRightX"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the Y axis value of right side of the controller.\n\n:returns: the axis value", "returnType": "float", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getRightY"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the start button on the controller.\n\n:returns: The state of the button.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getStartButton"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the start button was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getStartButtonPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the start button was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getStartButtonReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myHIDType"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get the type of the HID.\n\n:returns: the type of the HID.", "returnType": "wpilib.interfaces._interfaces.GenericHID.HIDType", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "getType"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the X button on the controller.\n\n:returns: The state of the button.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getXButton"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the X button was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getXButtonPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the X button was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getXButtonReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read the value of the Y button on the controller.\n\n:returns: The state of the button.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getYButton"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the Y button was pressed since the last check.\n\n:returns: Whether the button was pressed since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getYButtonPressed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Whether the Y button was released since the last check.\n\n:returns: Whether the button was released since the last check.", "returnType": "bool", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "getYButtonReleased"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Get if the HID is connected.\n\n:returns: true if the HID is connected", "returnType": "bool", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "isConnected"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the left bumper's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the left bumper's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "leftBumper"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the left stick's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the left stick's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "leftStick"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the axis value of the left trigger. The\nreturned trigger will be true when the axis value is greater than {@code\nthreshold}.\n\n:param threshold: the minimum axis value for the returned event to be true.\n                  This value should be in the range [0, 1] where 0 is the unpressed state of\n                  the axis.\n:param loop:      the event loop instance to attach the event to.\n\n:returns: an event instance that is true when the left trigger's axis exceeds\n          the provided threshold, attached to the given event loop", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "threshold", "type": "float"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "leftTrigger"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the axis value of the left trigger.\nThe returned trigger will be true when the axis value is greater than 0.5.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance that is true when the left trigger's axis\n          exceeds 0.5, attached to the given event loop", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "leftTrigger"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the right bumper's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the right bumper's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "rightBumper"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the right stick's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the right stick's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "rightStick"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the axis value of the right trigger.\nThe returned trigger will be true when the axis value is greater than\n``threshold``.\n\n:param threshold: the minimum axis value for the returned event to be true.\n                  This value should be in the range [0, 1] where 0 is the unpressed state of\n                  the axis.\n:param loop:      the event loop instance to attach the event to.\n\n:returns: an event instance that is true when the right trigger's axis\n          exceeds the provided threshold, attached to the given event loop", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "threshold", "type": "float"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "rightTrigger"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the axis value of the right trigger.\nThe returned trigger will be true when the axis value is greater than 0.5.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance that is true when the right trigger's axis\n          exceeds 0.5, attached to the given event loop", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "rightTrigger"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Set a single HID output value for the HID.\n\n:param outputNumber: The index of the output to set (1-32)\n:param value:        The value to set the output to", "returnType": "None", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "outputNumber", "type": "int"}, {"name": "value", "type": "bool"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "setOutput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Set all output values for the HID.\n\n:param value: The 32 bit output value (1 bit for each output)", "returnType": "None", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "value", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "setOutputs"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Set the rumble output for the HID.\n\nThe DS currently supports 2 rumble values, left rumble and right rumble.\n\n:param type:  Which rumble value to set\n:param value: The normalized value (0 to 1) to set the rumble to", "returnType": "None", "args": [{"name": "genericHID", "type": "wpilib.interfaces._interfaces.GenericHID"}, {"name": "type", "type": "wpilib.interfaces._interfaces.GenericHID.RumbleType"}, {"name": "value", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.interfaces.GenericHID", "FUNC": "setRumble"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myGenericHID"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRumbleType"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myBooleanEvent"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Constructs an event instance around the start button's digital signal.\n\n:param loop: the event loop instance to attach the event to.\n\n:returns: an event instance representing the start button's digital signal\n          attached to the given loop.", "returnType": "wpilib.event._event.BooleanEvent", "args": [{"name": "xboxController", "type": "wpilib._wpilib.XboxController"}, {"name": "loop", "type": "wpilib.event._event.EventLoop"}], "importModule": ""}, "fields": {"CLASS": "wpilib.XboxController", "FUNC": "start"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myXboxController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEventLoop"}}}}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}
