// This file was generated. Do not edit!

import * as python from "../python.js"

// Blocks for class wpimath.geometry.Quaternion

function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "Quaternion",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a quaternion with a default angle of 0 degrees.", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Quaternion"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Constructs a quaternion with the given components.\n\n:param w: W component of the quaternion.\n:param x: X component of the quaternion.\n:param y: Y component of the quaternion.\n:param z: Z component of the quaternion.", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "w", "type": "float"}, {"name": "x", "type": "float"}, {"name": "y", "type": "float"}, {"name": "z", "type": "float"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Quaternion"}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns W component of the quaternion.", "returnType": "float", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "W"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns X component of the quaternion.", "returnType": "float", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "X"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns Y component of the quaternion.", "returnType": "float", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "Y"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns Z component of the quaternion.", "returnType": "float", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "Z"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the conjugate of the quaternion.", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "conjugate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the elementwise product of two quaternions.", "returnType": "float", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}, {"name": "other", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "dot"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Matrix exponential of a quaternion.\n\n:param other: the \"Twist\" that will be applied to this quaternion.", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}, {"name": "other", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "exp"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Matrix exponential of a quaternion.\n\nsource: wpimath/algorithms.md\n\nIf this quaternion is in \ud835\udd98\ud835\udd94(3) and you are looking for an element of\nSO(3), use FromRotationVector", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "exp"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "Returns the quaternion representation of this rotation vector.\n\nThis is also the exp operator of \ud835\udd98\ud835\udd94(3).\n\nsource: wpimath/algorithms.md", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "rvec", "type": "numpy.ndarray[numpy.float64[3, 1]]"}], "importModule": "wpimath.geometry"}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "fromRotationVector"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[3, 1]]"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the inverse of the quaternion.", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "inverse"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Log operator of a quaternion.\n\n:param other: The quaternion to map this quaternion onto", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}, {"name": "other", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "log"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Log operator of a quaternion.\n\nsource:  wpimath/algorithms.md\n\nIf this quaternion is in SO(3) and you are looking for an element of \ud835\udd98\ud835\udd94(3),\nuse ToRotationVector", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "log"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Calculates the L2 norm of the quaternion.", "returnType": "float", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "norm"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Normalizes the quaternion.", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "normalize"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Calculates this quaternion raised to a power.\n\n:param t: the power to raise this quaternion to.", "returnType": "wpimath.geometry._geometry.Quaternion", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}, {"name": "t", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "pow"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myfloat64[3, 1]]"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the rotation vector representation of this quaternion.\n\nThis is also the log operator of SO(3).", "returnType": "numpy.ndarray[numpy.float64[3, 1]]", "args": [{"name": "quaternion", "type": "wpimath.geometry._geometry.Quaternion"}], "importModule": ""}, "fields": {"CLASS": "wpimath.geometry.Quaternion", "FUNC": "toRotationVector"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}

export {getToolboxCategory}
