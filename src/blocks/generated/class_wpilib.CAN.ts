// This file was generated. Do not edit!

import * as pythonVariable from "../python_variable";
import {Category} from "../../toolbox/items";

// Blocks for class wpilib.CAN

export function initialize() {
  pythonVariable.initializeClassVariableGetter("wpilib.CAN", "hal.CANDeviceType", ["kTeamDeviceType"], []);
  pythonVariable.initializeClassVariableGetter("wpilib.CAN", "hal.CANManufacturer", ["kTeamManufacturer"], []);
}

export function getToolboxCategory(subcategories: Category[] = []): Category {
  const category: Category = {
    kind: "category",
    name: "CAN",
    contents: [
      {"kind": "block", "type": "get_python_class_variable", "extraState": {"varType": "hal.CANDeviceType", "key": "class wpilib.CAN hal.CANDeviceType", "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.CAN", "VAR": "kTeamDeviceType"}},
      {"kind": "block", "type": "get_python_class_variable", "extraState": {"varType": "hal.CANManufacturer", "key": "class wpilib.CAN hal.CANManufacturer", "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.CAN", "VAR": "kTeamManufacturer"}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCAN"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Create a new CAN communication interface with the specific device ID.\nThis uses the team manufacturer and device types.\nThe device ID is 6 bits (0-63)\n\n:param deviceId: The device id", "returnType": "wpilib._wpilib.CAN", "args": [{"name": "deviceId", "type": "int"}], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.CAN"}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCAN"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Create a new CAN communication interface with a specific device ID,\nmanufacturer and device type. The device ID is 6 bits, the\nmanufacturer is 8 bits, and the device type is 5 bits.\n\n:param deviceId:           The device ID\n:param deviceManufacturer: The device manufacturer\n:param deviceType:         The device type", "returnType": "wpilib._wpilib.CAN", "args": [{"name": "deviceId", "type": "int"}, {"name": "deviceManufacturer", "type": "int"}, {"name": "deviceType", "type": "int"}], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.CAN"}}}}},
      {"kind": "block", "type": "call_python_static_method", "extraState": {"tooltip": "Reads the current value of the millisecond-resolution timer that CANData\ntimestamps are based on\n\n:returns: Current value of timer used as a base time for CANData timestamps\n          in milliseconds", "returnType": "int", "args": [], "importModule": "wpilib"}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "getTimestampBaseTime"}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read a CAN packet. The will continuously return the last packet received,\nwithout accounting for packet age.\n\n:param apiId: The API ID to read.\n:param data:  Storage for the received data.\n\n:returns: True if the data is valid, otherwise false.", "returnType": "bool", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "apiId", "type": "int"}, {"name": "data", "type": "wpilib._wpilib.CANData"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "readPacketLatest"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCANData"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read a new CAN packet. This will only return properly once per packet\nreceived. Multiple calls without receiving another packet will return\nfalse.\n\n:param apiId: The API ID to read.\n:param data:  Storage for the received data.\n\n:returns: True if the data is valid, otherwise false.", "returnType": "bool", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "apiId", "type": "int"}, {"name": "data", "type": "wpilib._wpilib.CANData"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "readPacketNew"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCANData"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Read a CAN packet. The will return the last packet received until the\npacket is older then the requested timeout. Then it will return false.\n\n:param apiId:     The API ID to read.\n:param timeoutMs: The timeout time for the packet\n:param data:      Storage for the received data.\n\n:returns: True if the data is valid, otherwise false.", "returnType": "bool", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "apiId", "type": "int"}, {"name": "timeoutMs", "type": "int"}, {"name": "data", "type": "wpilib._wpilib.CANData"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "readPacketTimeout"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCANData"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Stop a repeating packet with a specific ID. This ID is 10 bits.\n\n:param apiId: The API ID to stop repeating", "returnType": "None", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "apiId", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "stopPacketRepeating"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Write a packet to the CAN device with a specific ID. This ID is 10 bits.\n\n:param data:   The data to write (8 bytes max)\n:param length: The data length to write\n:param apiId:  The API ID to write.", "returnType": "None", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "data", "type": "Buffer"}, {"name": "apiId", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "writePacket"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Write a packet to the CAN device with a specific ID. This ID is 10 bits.\n\n:param data:   The data to write (8 bytes max)\n:param length: The data length to write\n:param apiId:  The API ID to write.", "returnType": "int", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "data", "type": "Buffer"}, {"name": "apiId", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "writePacketNoError"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Write a repeating packet to the CAN device with a specific ID. This ID is\n10 bits. The RoboRIO will automatically repeat the packet at the specified\ninterval\n\n:param data:     The data to write (8 bytes max)\n:param length:   The data length to write\n:param apiId:    The API ID to write.\n:param repeatMs: The period to repeat the packet at.", "returnType": "None", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "data", "type": "Buffer"}, {"name": "apiId", "type": "int"}, {"name": "repeatMs", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "writePacketRepeating"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Write a repeating packet to the CAN device with a specific ID. This ID is\n10 bits. The RoboRIO will automatically repeat the packet at the specified\ninterval\n\n:param data:     The data to write (8 bytes max)\n:param length:   The data length to write\n:param apiId:    The API ID to write.\n:param repeatMs: The period to repeat the packet at.", "returnType": "int", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "data", "type": "Buffer"}, {"name": "apiId", "type": "int"}, {"name": "repeatMs", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "writePacketRepeatingNoError"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Write an RTR frame to the CAN device with a specific ID. This ID is 10\nbits. The length by spec must match what is returned by the responding\ndevice\n\n:param length: The length to request (0 to 8)\n:param apiId:  The API ID to write.", "returnType": "None", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "length", "type": "int"}, {"name": "apiId", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "writeRTRFrame"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Write an RTR frame to the CAN device with a specific ID. This ID is 10\nbits. The length by spec must match what is returned by the responding\ndevice\n\n:param length: The length to request (0 to 8)\n:param apiId:  The API ID to write.", "returnType": "int", "args": [{"name": "cAN", "type": "wpilib._wpilib.CAN"}, {"name": "length", "type": "int"}, {"name": "apiId", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.CAN", "FUNC": "writeRTRFrameNoError"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCAN"}}}}}},
    ],
  };
  category.contents.push(...subcategories);
  return category;
}
