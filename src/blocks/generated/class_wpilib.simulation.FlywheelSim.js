// This file was generated. Do not edit!

import * as python from "../python.js"

// Blocks for class wpilib.simulation.FlywheelSim

function getToolboxCategory(subcategories) {
  const category = {
    kind: "category",
    name: "FlywheelSim",
    contents: [
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myFlywheelSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Creates a simulated flywheel mechanism.\n\n:param plant:              The linear system representing the flywheel. This\n                           system can be created with\n                           LinearSystemId::FlywheelSystem().\n:param gearbox:            The type of and number of motors in the flywheel\n                           gearbox.\n:param gearing:            The gearing of the flywheel (numbers greater than\n                           1 represent reductions).\n:param measurementStdDevs: The standard deviation of the measurement noise.", "returnType": "wpilib.simulation._simulation.FlywheelSim", "args": [{"name": "plant", "type": "wpimath._controls._controls.system.LinearSystem_1_1_1"}, {"name": "gearbox", "type": "wpimath._controls._controls.plant.DCMotor"}, {"name": "gearing", "type": "float"}, {"name": "measurementStdDevs", "type": "Annotated[list[float], FixedSize(1)]"}], "importModule": "wpilib.simulation"}, "fields": {"CLASS": "wpilib.simulation.FlywheelSim"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystem_1_1_1"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDCMotor"}}}}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myFlywheelSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_constructor", "extraState": {"tooltip": "Creates a simulated flywheel mechanism.\n\n:param gearbox:            The type of and number of motors in the flywheel\n                           gearbox.\n:param gearing:            The gearing of the flywheel (numbers greater than\n                           1 represent reductions).\n:param moi:                The moment of inertia of the flywheel.\n:param measurementStdDevs: The standard deviation of the measurement noise.", "returnType": "wpilib.simulation._simulation.FlywheelSim", "args": [{"name": "gearbox", "type": "wpimath._controls._controls.plant.DCMotor"}, {"name": "gearing", "type": "float"}, {"name": "moi", "type": "wpimath.units.kilogram_square_meters"}, {"name": "measurementStdDevs", "type": "Annotated[list[float], FixedSize(1)]"}], "importModule": "wpilib.simulation"}, "fields": {"CLASS": "wpilib.simulation.FlywheelSim"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDCMotor"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the flywheel velocity.\n\n:returns: The flywheel velocity.", "returnType": "wpimath.units.radians_per_second", "args": [{"name": "flywheelSim", "type": "wpilib.simulation._simulation.FlywheelSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.FlywheelSim", "FUNC": "getAngularVelocity"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myFlywheelSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the flywheel current draw.\n\n:returns: The flywheel current draw.", "returnType": "wpimath.units.amperes", "args": [{"name": "flywheelSim", "type": "wpilib.simulation._simulation.FlywheelSim"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.FlywheelSim", "FUNC": "getCurrentDraw"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myFlywheelSim"}}}}}},
      {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myfloat64[1, 1]]"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns the current output of the plant.\n\n:returns: The current output of the plant.", "returnType": "numpy.ndarray[numpy.float64[1, 1]]", "args": [{"name": "linearSystemSim_1_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_1_1_1"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_1_1_1", "FUNC": "getOutput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_1_1_1"}}}}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Returns an element of the current output of the plant.\n\n:param row: The row to return.\n\n:returns: An element of the current output of the plant.", "returnType": "float", "args": [{"name": "linearSystemSim_1_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_1_1_1"}, {"name": "row", "type": "int"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_1_1_1", "FUNC": "getOutput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_1_1_1"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the system inputs (usually voltages).\n\n:param u: The system inputs.", "returnType": "None", "args": [{"name": "linearSystemSim_1_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_1_1_1"}, {"name": "u", "type": "numpy.ndarray[numpy.float64[1, 1]]"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_1_1_1", "FUNC": "setInput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_1_1_1"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myfloat64[1, 1]]"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "", "returnType": "None", "args": [{"name": "linearSystemSim_1_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_1_1_1"}, {"name": "row", "type": "int"}, {"name": "value", "type": "float"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_1_1_1", "FUNC": "setInput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_1_1_1"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the input voltage for the flywheel.\n\n:param voltage: The input voltage.", "returnType": "None", "args": [{"name": "flywheelSim", "type": "wpilib.simulation._simulation.FlywheelSim"}, {"name": "voltage", "type": "wpimath.units.volts"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.FlywheelSim", "FUNC": "setInputVoltage"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myFlywheelSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Sets the flywheel's state.\n\n:param velocity: The new velocity", "returnType": "None", "args": [{"name": "flywheelSim", "type": "wpilib.simulation._simulation.FlywheelSim"}, {"name": "velocity", "type": "wpimath.units.radians_per_second"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.FlywheelSim", "FUNC": "setState"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myFlywheelSim"}}}}}},
      {"kind": "block", "type": "call_python_instance_method", "extraState": {"tooltip": "Updates the simulation.\n\n:param dt: The time between updates.", "returnType": "None", "args": [{"name": "linearSystemSim_1_1_1", "type": "wpilib.simulation._simulation.LinearSystemSim_1_1_1"}, {"name": "dt", "type": "wpimath.units.seconds"}], "importModule": ""}, "fields": {"CLASS": "wpilib.simulation.LinearSystemSim_1_1_1", "FUNC": "update"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myLinearSystemSim_1_1_1"}}}}}},
    ],
  };
  if (subcategories) {
    category.contents.push(...subcategories);
  }
  return category;
}

export {getToolboxCategory}
